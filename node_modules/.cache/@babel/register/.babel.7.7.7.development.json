{
  "{\"sourceRoot\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\",\"filename\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "filename": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//declarations\nvar bodyParser = require('body-parser');\n\nvar AuthToken = require('./src/middlewares/AuthToken');\n\nvar app = (0, _express[\"default\"])(); //settings\n\nvar port = process.env.PORT || 4000; //middlewares\n//app.use(AuthToken);\n\napp.use((0, _morgan[\"default\"])('tiny'));\napp.use((0, _cors[\"default\"])());\napp.use(bodyParser.json());\napp.use(_express[\"default\"].json());\napp.use(_express[\"default\"].urlencoded({\n  extended: true\n})); //routes\n\napp.use('/', require('./src/routes/index'));\napp.use('/api/home', require('./src/routes/home'));\napp.use('/api/login', require('./src/routes/login'));\napp.use('/api/usuario', require('./src/routes/usuario'));\napp.use('/api/aspirante', require('./src/routes/aspirante'));\napp.use('/api/candidato', require('./src/routes/candidato'));\napp.use('/api/estudiante', require('./src/routes/estudiante'));\napp.use('/api/procesoVotacion', require('./src/routes/procesoVotacion'));\napp.use('/api/propuesta', require('./src/routes/propuesta')); // Middleware para Vue.js router modo history\n\nvar history = require('connect-history-api-fallback');\n\napp.use(history());\napp.use(_express[\"default\"][\"static\"](_path[\"default\"].join(__dirname, '/src/public'))); //listen\n\napp.listen(port, function () {\n  console.log(\"listening on \".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImJvZHlQYXJzZXIiLCJyZXF1aXJlIiwiQXV0aFRva2VuIiwiYXBwIiwicG9ydCIsInByb2Nlc3MiLCJlbnYiLCJQT1JUIiwidXNlIiwianNvbiIsImV4cHJlc3MiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJoaXN0b3J5IiwicGF0aCIsImpvaW4iLCJfX2Rpcm5hbWUiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUVBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBTEE7QUFNQSxJQUFNQSxVQUFVLEdBQUdDLE9BQU8sQ0FBQyxhQUFELENBQTFCOztBQUNBLElBQU1DLFNBQVMsR0FBRUQsT0FBTyxDQUFDLDZCQUFELENBQXhCOztBQUVBLElBQU1FLEdBQUcsR0FBRywwQkFBWixDLENBRUE7O0FBQ0EsSUFBTUMsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFqQyxDLENBSUE7QUFDQTs7QUFDQUosR0FBRyxDQUFDSyxHQUFKLENBQVEsd0JBQU8sTUFBUCxDQUFSO0FBQ0FMLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLHVCQUFSO0FBQ0FMLEdBQUcsQ0FBQ0ssR0FBSixDQUFRUixVQUFVLENBQUNTLElBQVgsRUFBUjtBQUNBTixHQUFHLENBQUNLLEdBQUosQ0FBUUUsb0JBQVFELElBQVIsRUFBUjtBQUNBTixHQUFHLENBQUNLLEdBQUosQ0FBUUUsb0JBQVFDLFVBQVIsQ0FBbUI7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBbkIsQ0FBUixFLENBS0E7O0FBQ0FULEdBQUcsQ0FBQ0ssR0FBSixDQUFRLEdBQVIsRUFBWVAsT0FBTyxDQUFDLG9CQUFELENBQW5CO0FBQ0FFLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLFdBQVIsRUFBb0JQLE9BQU8sQ0FBQyxtQkFBRCxDQUEzQjtBQUNBRSxHQUFHLENBQUNLLEdBQUosQ0FBUSxZQUFSLEVBQXFCUCxPQUFPLENBQUMsb0JBQUQsQ0FBNUI7QUFDQUUsR0FBRyxDQUFDSyxHQUFKLENBQVEsY0FBUixFQUF1QlAsT0FBTyxDQUFDLHNCQUFELENBQTlCO0FBQ0FFLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLGdCQUFSLEVBQXlCUCxPQUFPLENBQUMsd0JBQUQsQ0FBaEM7QUFDQUUsR0FBRyxDQUFDSyxHQUFKLENBQVEsZ0JBQVIsRUFBeUJQLE9BQU8sQ0FBQyx3QkFBRCxDQUFoQztBQUNBRSxHQUFHLENBQUNLLEdBQUosQ0FBUSxpQkFBUixFQUEwQlAsT0FBTyxDQUFDLHlCQUFELENBQWpDO0FBQ0FFLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLHNCQUFSLEVBQStCUCxPQUFPLENBQUMsOEJBQUQsQ0FBdEM7QUFDQUUsR0FBRyxDQUFDSyxHQUFKLENBQVEsZ0JBQVIsRUFBeUJQLE9BQU8sQ0FBQyx3QkFBRCxDQUFoQyxFLENBRUE7O0FBQ0EsSUFBTVksT0FBTyxHQUFHWixPQUFPLENBQUMsOEJBQUQsQ0FBdkI7O0FBQ0FFLEdBQUcsQ0FBQ0ssR0FBSixDQUFRSyxPQUFPLEVBQWY7QUFDQVYsR0FBRyxDQUFDSyxHQUFKLENBQVFFLDhCQUFlSSxpQkFBS0MsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLGFBQXJCLENBQWYsQ0FBUixFLENBRUE7O0FBQ0FiLEdBQUcsQ0FBQ2MsTUFBSixDQUFXYixJQUFYLEVBQWlCLFlBQU07QUFDbkJjLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUix3QkFBNEJmLElBQTVCO0FBQ0gsQ0FGRCIsInNvdXJjZVJvb3QiOiJEOlxcVVNVQVJJT1xcRG9jdW1lbnRzXFxQcm95ZWN0b3NcXEUtdm90ZVxcRS12b3RlLUJhY2tlbmRcXEUtdm90ZS1CYWNrZW5kIiwic291cmNlc0NvbnRlbnQiOlsiLy9kZWNsYXJhdGlvbnNcclxuXHJcbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgbW9yZ2FuIGZyb20gJ21vcmdhbic7XHJcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnO1xyXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcclxuY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7XHJcbmNvbnN0IEF1dGhUb2tlbiA9cmVxdWlyZSgnLi9zcmMvbWlkZGxld2FyZXMvQXV0aFRva2VuJylcclxuXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuXHJcbi8vc2V0dGluZ3NcclxuY29uc3QgcG9ydCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgNDAwMDtcclxuXHJcblxyXG5cclxuLy9taWRkbGV3YXJlc1xyXG4vL2FwcC51c2UoQXV0aFRva2VuKTtcclxuYXBwLnVzZShtb3JnYW4oJ3RpbnknKSk7XHJcbmFwcC51c2UoY29ycygpKTtcclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XHJcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xyXG5hcHAudXNlKGV4cHJlc3MudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiB0cnVlIH0pKTtcclxuXHJcblxyXG5cclxuXHJcbi8vcm91dGVzXHJcbmFwcC51c2UoJy8nLHJlcXVpcmUoJy4vc3JjL3JvdXRlcy9pbmRleCcpKTtcclxuYXBwLnVzZSgnL2FwaS9ob21lJyxyZXF1aXJlKCcuL3NyYy9yb3V0ZXMvaG9tZScpKTtcclxuYXBwLnVzZSgnL2FwaS9sb2dpbicscmVxdWlyZSgnLi9zcmMvcm91dGVzL2xvZ2luJykpO1xyXG5hcHAudXNlKCcvYXBpL3VzdWFyaW8nLHJlcXVpcmUoJy4vc3JjL3JvdXRlcy91c3VhcmlvJykpO1xyXG5hcHAudXNlKCcvYXBpL2FzcGlyYW50ZScscmVxdWlyZSgnLi9zcmMvcm91dGVzL2FzcGlyYW50ZScpKTtcclxuYXBwLnVzZSgnL2FwaS9jYW5kaWRhdG8nLHJlcXVpcmUoJy4vc3JjL3JvdXRlcy9jYW5kaWRhdG8nKSk7XHJcbmFwcC51c2UoJy9hcGkvZXN0dWRpYW50ZScscmVxdWlyZSgnLi9zcmMvcm91dGVzL2VzdHVkaWFudGUnKSk7XHJcbmFwcC51c2UoJy9hcGkvcHJvY2Vzb1ZvdGFjaW9uJyxyZXF1aXJlKCcuL3NyYy9yb3V0ZXMvcHJvY2Vzb1ZvdGFjaW9uJykpO1xyXG5hcHAudXNlKCcvYXBpL3Byb3B1ZXN0YScscmVxdWlyZSgnLi9zcmMvcm91dGVzL3Byb3B1ZXN0YScpKTtcclxuXHJcbi8vIE1pZGRsZXdhcmUgcGFyYSBWdWUuanMgcm91dGVyIG1vZG8gaGlzdG9yeVxyXG5jb25zdCBoaXN0b3J5ID0gcmVxdWlyZSgnY29ubmVjdC1oaXN0b3J5LWFwaS1mYWxsYmFjaycpO1xyXG5hcHAudXNlKGhpc3RvcnkoKSk7XHJcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMocGF0aC5qb2luKF9fZGlybmFtZSwgJy9zcmMvcHVibGljJykpKTtcclxuXHJcbi8vbGlzdGVuXHJcbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coYGxpc3RlbmluZyBvbiAke3BvcnR9YCk7XHJcbn0pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "bodyParser",
        "require",
        "AuthToken",
        "app",
        "port",
        "process",
        "env",
        "PORT",
        "use",
        "json",
        "express",
        "urlencoded",
        "extended",
        "history",
        "path",
        "join",
        "__dirname",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAEA;;AACA;;AACA;;AACA;;;;AALA;AAMA,IAAMA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMC,SAAS,GAAED,OAAO,CAAC,6BAAD,CAAxB;;AAEA,IAAME,GAAG,GAAG,0BAAZ,C,CAEA;;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC,C,CAIA;AACA;;AACAJ,GAAG,CAACK,GAAJ,CAAQ,wBAAO,MAAP,CAAR;AACAL,GAAG,CAACK,GAAJ,CAAQ,uBAAR;AACAL,GAAG,CAACK,GAAJ,CAAQR,UAAU,CAACS,IAAX,EAAR;AACAN,GAAG,CAACK,GAAJ,CAAQE,oBAAQD,IAAR,EAAR;AACAN,GAAG,CAACK,GAAJ,CAAQE,oBAAQC,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR,E,CAKA;;AACAT,GAAG,CAACK,GAAJ,CAAQ,GAAR,EAAYP,OAAO,CAAC,oBAAD,CAAnB;AACAE,GAAG,CAACK,GAAJ,CAAQ,WAAR,EAAoBP,OAAO,CAAC,mBAAD,CAA3B;AACAE,GAAG,CAACK,GAAJ,CAAQ,YAAR,EAAqBP,OAAO,CAAC,oBAAD,CAA5B;AACAE,GAAG,CAACK,GAAJ,CAAQ,cAAR,EAAuBP,OAAO,CAAC,sBAAD,CAA9B;AACAE,GAAG,CAACK,GAAJ,CAAQ,gBAAR,EAAyBP,OAAO,CAAC,wBAAD,CAAhC;AACAE,GAAG,CAACK,GAAJ,CAAQ,gBAAR,EAAyBP,OAAO,CAAC,wBAAD,CAAhC;AACAE,GAAG,CAACK,GAAJ,CAAQ,iBAAR,EAA0BP,OAAO,CAAC,yBAAD,CAAjC;AACAE,GAAG,CAACK,GAAJ,CAAQ,sBAAR,EAA+BP,OAAO,CAAC,8BAAD,CAAtC;AACAE,GAAG,CAACK,GAAJ,CAAQ,gBAAR,EAAyBP,OAAO,CAAC,wBAAD,CAAhC,E,CAEA;;AACA,IAAMY,OAAO,GAAGZ,OAAO,CAAC,8BAAD,CAAvB;;AACAE,GAAG,CAACK,GAAJ,CAAQK,OAAO,EAAf;AACAV,GAAG,CAACK,GAAJ,CAAQE,8BAAeI,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,aAArB,CAAf,CAAR,E,CAEA;;AACAb,GAAG,CAACc,MAAJ,CAAWb,IAAX,EAAiB,YAAM;AACnBc,EAAAA,OAAO,CAACC,GAAR,wBAA4Bf,IAA5B;AACH,CAFD",
      "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "sourcesContent": [
        "//declarations\r\n\r\nimport express from 'express';\r\nimport morgan from 'morgan';\r\nimport cors from 'cors';\r\nimport path from 'path';\r\nconst bodyParser = require('body-parser');\r\nconst AuthToken =require('./src/middlewares/AuthToken')\r\n\r\nconst app = express();\r\n\r\n//settings\r\nconst port = process.env.PORT || 4000;\r\n\r\n\r\n\r\n//middlewares\r\n//app.use(AuthToken);\r\napp.use(morgan('tiny'));\r\napp.use(cors());\r\napp.use(bodyParser.json());\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: true }));\r\n\r\n\r\n\r\n\r\n//routes\r\napp.use('/',require('./src/routes/index'));\r\napp.use('/api/home',require('./src/routes/home'));\r\napp.use('/api/login',require('./src/routes/login'));\r\napp.use('/api/usuario',require('./src/routes/usuario'));\r\napp.use('/api/aspirante',require('./src/routes/aspirante'));\r\napp.use('/api/candidato',require('./src/routes/candidato'));\r\napp.use('/api/estudiante',require('./src/routes/estudiante'));\r\napp.use('/api/procesoVotacion',require('./src/routes/procesoVotacion'));\r\napp.use('/api/propuesta',require('./src/routes/propuesta'));\r\n\r\n// Middleware para Vue.js router modo history\r\nconst history = require('connect-history-api-fallback');\r\napp.use(history());\r\napp.use(express.static(path.join(__dirname, '/src/public')));\r\n\r\n//listen\r\napp.listen(port, () => {\r\n    console.log(`listening on ${port}`);\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1577072751690
  },
  "{\"sourceRoot\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\\\\src\\\\middlewares\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\",\"filename\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\\\\src\\\\middlewares\\\\AuthToken.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\middlewares",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "filename": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\middlewares\\AuthToken.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\middlewares\\AuthToken.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\middlewares\\AuthToken.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\middlewares",
        "sourceFileName": "AuthToken.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar jwt = require('jsonwebtoken');\n\nvar secret = 'evote';\n\nmodule.exports = function (req, res, next) {\n  var ruta = req.path;\n  var metodo = req.method;\n  var Rolpeticion = req.headers.rolseleccionado;\n  var RolToken = []; //var rutaAdmin=[],[];\n  //var rutaVotante=[],[];\n  //var rutaAspirante=[],[];\n  //var rutaCandidatp=[],[];\n  //console.log(Rolpeticion)\n\n  if (ruta != '/api/login') {\n    if (metodo != 'OPTIONS') {\n      //console.log(req.headers)\n      if (req.headers.authorization) {\n        var token = req.headers.authorization.split(' ')[1];\n        jwt.verify(token, secret, function (error, decoded) {\n          if (error) {\n            res.status(403).json({\n              Messaje: error\n            });\n          } else {\n            console.log();\n            var RolToken = [];\n\n            for (var index = 0; index < decoded.aux[0].roles.length; index++) {\n              RolToken[index] = decoded.aux[0].roles[index].RolNombre;\n            }\n\n            console.log(RolToken);\n            next();\n          }\n        });\n      } else {\n        res.status(403).json({\n          Messaje: 'No Posee Token de validacion'\n        });\n      }\n    } else next();\n  } else next();\n};\n/*\r\n \r\n*/\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkF1dGhUb2tlbi5qcyJdLCJuYW1lcyI6WyJqd3QiLCJyZXF1aXJlIiwic2VjcmV0IiwibW9kdWxlIiwiZXhwb3J0cyIsInJlcSIsInJlcyIsIm5leHQiLCJydXRhIiwicGF0aCIsIm1ldG9kbyIsIm1ldGhvZCIsIlJvbHBldGljaW9uIiwiaGVhZGVycyIsInJvbHNlbGVjY2lvbmFkbyIsIlJvbFRva2VuIiwiYXV0aG9yaXphdGlvbiIsInRva2VuIiwic3BsaXQiLCJ2ZXJpZnkiLCJlcnJvciIsImRlY29kZWQiLCJzdGF0dXMiLCJqc29uIiwiTWVzc2FqZSIsImNvbnNvbGUiLCJsb2ciLCJpbmRleCIsImF1eCIsInJvbGVzIiwibGVuZ3RoIiwiUm9sTm9tYnJlIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBbkI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFDLE9BQWI7O0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFTQyxHQUFULEVBQWFDLEdBQWIsRUFBaUJDLElBQWpCLEVBQXNCO0FBQ3BDLE1BQUlDLElBQUksR0FBQ0gsR0FBRyxDQUFDSSxJQUFiO0FBQ0EsTUFBSUMsTUFBTSxHQUFDTCxHQUFHLENBQUNNLE1BQWY7QUFDQSxNQUFJQyxXQUFXLEdBQUVQLEdBQUcsQ0FBQ1EsT0FBSixDQUFZQyxlQUE3QjtBQUNBLE1BQUlDLFFBQVEsR0FBQyxFQUFiLENBSm9DLENBS3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBR0EsTUFBR1AsSUFBSSxJQUFHLFlBQVYsRUFBdUI7QUFDbkIsUUFBR0UsTUFBTSxJQUFHLFNBQVosRUFBc0I7QUFDbEI7QUFDSCxVQUFHTCxHQUFHLENBQUNRLE9BQUosQ0FBWUcsYUFBZixFQUE2QjtBQUN6QixZQUFJQyxLQUFLLEdBQUVaLEdBQUcsQ0FBQ1EsT0FBSixDQUFZRyxhQUFaLENBQTBCRSxLQUExQixDQUFnQyxHQUFoQyxFQUFxQyxDQUFyQyxDQUFYO0FBQ0FsQixRQUFBQSxHQUFHLENBQUNtQixNQUFKLENBQVdGLEtBQVgsRUFBaUJmLE1BQWpCLEVBQXdCLFVBQVNrQixLQUFULEVBQWVDLE9BQWYsRUFBdUI7QUFDM0MsY0FBR0QsS0FBSCxFQUFTO0FBQ0xkLFlBQUFBLEdBQUcsQ0FBQ2dCLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUN6QkMsY0FBQUEsT0FBTyxFQUFHSjtBQURlLGFBQXJCO0FBR0gsV0FKRCxNQUlLO0FBQ0RLLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUjtBQUNBLGdCQUFJWCxRQUFRLEdBQUMsRUFBYjs7QUFDQSxpQkFBSyxJQUFJWSxLQUFLLEdBQUcsQ0FBakIsRUFBb0JBLEtBQUssR0FBR04sT0FBTyxDQUFDTyxHQUFSLENBQVksQ0FBWixFQUFlQyxLQUFmLENBQXFCQyxNQUFqRCxFQUF5REgsS0FBSyxFQUE5RCxFQUFrRTtBQUM5RFosY0FBQUEsUUFBUSxDQUFDWSxLQUFELENBQVIsR0FBZ0JOLE9BQU8sQ0FBQ08sR0FBUixDQUFZLENBQVosRUFBZUMsS0FBZixDQUFxQkYsS0FBckIsRUFBNEJJLFNBQTVDO0FBQ0g7O0FBQ0ROLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZWCxRQUFaO0FBQ0FSLFlBQUFBLElBQUk7QUFDUDtBQUNKLFNBZEQ7QUFpQkEsT0FuQkosTUFtQlE7QUFDSkQsUUFBQUEsR0FBRyxDQUFDZ0IsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ2pCQyxVQUFBQSxPQUFPLEVBQUU7QUFEUSxTQUFyQjtBQUdBO0FBQ0osS0ExQkQsTUEwQk1qQixJQUFJO0FBRWIsR0E3QkQsTUE2Qk1BLElBQUk7QUFFWixDQTNDRDtBQTZDQSIsInNvdXJjZVJvb3QiOiJEOlxcVVNVQVJJT1xcRG9jdW1lbnRzXFxQcm95ZWN0b3NcXEUtdm90ZVxcRS12b3RlLUJhY2tlbmRcXEUtdm90ZS1CYWNrZW5kXFxzcmNcXG1pZGRsZXdhcmVzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgand0ID0gcmVxdWlyZSgnanNvbndlYnRva2VuJyk7XHJcbmNvbnN0IHNlY3JldD0nZXZvdGUnO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihyZXEscmVzLG5leHQpe1xyXG4gICB2YXIgcnV0YT1yZXEucGF0aFxyXG4gICB2YXIgbWV0b2RvPXJlcS5tZXRob2Q7XHJcbiAgIHZhciBSb2xwZXRpY2lvbj0gcmVxLmhlYWRlcnMucm9sc2VsZWNjaW9uYWRvO1xyXG4gICB2YXIgUm9sVG9rZW49W107XHJcbiAgIC8vdmFyIHJ1dGFBZG1pbj1bXSxbXTtcclxuICAgLy92YXIgcnV0YVZvdGFudGU9W10sW107XHJcbiAgIC8vdmFyIHJ1dGFBc3BpcmFudGU9W10sW107XHJcbiAgIC8vdmFyIHJ1dGFDYW5kaWRhdHA9W10sW107XHJcbiAgIC8vY29uc29sZS5sb2coUm9scGV0aWNpb24pXHJcblxyXG5cclxuICAgaWYocnV0YSAhPScvYXBpL2xvZ2luJyl7XHJcbiAgICAgICBpZihtZXRvZG8gIT0nT1BUSU9OUycpe1xyXG4gICAgICAgICAgIC8vY29uc29sZS5sb2cocmVxLmhlYWRlcnMpXHJcbiAgICAgICAgaWYocmVxLmhlYWRlcnMuYXV0aG9yaXphdGlvbil7XHJcbiAgICAgICAgICAgIGxldCB0b2tlbiA9cmVxLmhlYWRlcnMuYXV0aG9yaXphdGlvbi5zcGxpdCgnICcpWzFdXHJcbiAgICAgICAgICAgIGp3dC52ZXJpZnkodG9rZW4sc2VjcmV0LGZ1bmN0aW9uKGVycm9yLGRlY29kZWQpe1xyXG4gICAgICAgICAgICAgICAgaWYoZXJyb3Ipe1xyXG4gICAgICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoNDAzKS5qc29uKHtcclxuICAgICAgICAgICAgICAgIE1lc3NhamUgOiBlcnJvclxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgfWVsc2V7IFxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIFJvbFRva2VuPVtdO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBkZWNvZGVkLmF1eFswXS5yb2xlcy5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgUm9sVG9rZW5baW5kZXhdPWRlY29kZWQuYXV4WzBdLnJvbGVzW2luZGV4XS5Sb2xOb21icmU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFJvbFRva2VuKVxyXG4gICAgICAgICAgICAgICAgICAgIG5leHQoKTsgXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gIFxyXG4gICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDQwMykuanNvbih7XHJcbiAgICAgICAgICAgICAgICBNZXNzYWplIDonTm8gUG9zZWUgVG9rZW4gZGUgdmFsaWRhY2lvbidcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICB9XHJcbiAgICAgICB9ZWxzZSBuZXh0KCk7XHJcbiAgICAgICBcclxuICAgfWVsc2UgbmV4dCgpO1xyXG5cclxufVxyXG5cclxuLypcclxuIFxyXG4qLyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "AuthToken.js"
      ],
      "names": [
        "jwt",
        "require",
        "secret",
        "module",
        "exports",
        "req",
        "res",
        "next",
        "ruta",
        "path",
        "metodo",
        "method",
        "Rolpeticion",
        "headers",
        "rolseleccionado",
        "RolToken",
        "authorization",
        "token",
        "split",
        "verify",
        "error",
        "decoded",
        "status",
        "json",
        "Messaje",
        "console",
        "log",
        "index",
        "aux",
        "roles",
        "length",
        "RolNombre"
      ],
      "mappings": ";;AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAMC,MAAM,GAAC,OAAb;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAASC,GAAT,EAAaC,GAAb,EAAiBC,IAAjB,EAAsB;AACpC,MAAIC,IAAI,GAACH,GAAG,CAACI,IAAb;AACA,MAAIC,MAAM,GAACL,GAAG,CAACM,MAAf;AACA,MAAIC,WAAW,GAAEP,GAAG,CAACQ,OAAJ,CAAYC,eAA7B;AACA,MAAIC,QAAQ,GAAC,EAAb,CAJoC,CAKpC;AACA;AACA;AACA;AACA;;AAGA,MAAGP,IAAI,IAAG,YAAV,EAAuB;AACnB,QAAGE,MAAM,IAAG,SAAZ,EAAsB;AAClB;AACH,UAAGL,GAAG,CAACQ,OAAJ,CAAYG,aAAf,EAA6B;AACzB,YAAIC,KAAK,GAAEZ,GAAG,CAACQ,OAAJ,CAAYG,aAAZ,CAA0BE,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAX;AACAlB,QAAAA,GAAG,CAACmB,MAAJ,CAAWF,KAAX,EAAiBf,MAAjB,EAAwB,UAASkB,KAAT,EAAeC,OAAf,EAAuB;AAC3C,cAAGD,KAAH,EAAS;AACLd,YAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACzBC,cAAAA,OAAO,EAAGJ;AADe,aAArB;AAGH,WAJD,MAIK;AACDK,YAAAA,OAAO,CAACC,GAAR;AACA,gBAAIX,QAAQ,GAAC,EAAb;;AACA,iBAAK,IAAIY,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGN,OAAO,CAACO,GAAR,CAAY,CAAZ,EAAeC,KAAf,CAAqBC,MAAjD,EAAyDH,KAAK,EAA9D,EAAkE;AAC9DZ,cAAAA,QAAQ,CAACY,KAAD,CAAR,GAAgBN,OAAO,CAACO,GAAR,CAAY,CAAZ,EAAeC,KAAf,CAAqBF,KAArB,EAA4BI,SAA5C;AACH;;AACDN,YAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACAR,YAAAA,IAAI;AACP;AACJ,SAdD;AAiBA,OAnBJ,MAmBQ;AACJD,QAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,UAAAA,OAAO,EAAE;AADQ,SAArB;AAGA;AACJ,KA1BD,MA0BMjB,IAAI;AAEb,GA7BD,MA6BMA,IAAI;AAEZ,CA3CD;AA6CA",
      "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\middlewares",
      "sourcesContent": [
        "const jwt = require('jsonwebtoken');\r\nconst secret='evote';\r\n\r\nmodule.exports = function(req,res,next){\r\n   var ruta=req.path\r\n   var metodo=req.method;\r\n   var Rolpeticion= req.headers.rolseleccionado;\r\n   var RolToken=[];\r\n   //var rutaAdmin=[],[];\r\n   //var rutaVotante=[],[];\r\n   //var rutaAspirante=[],[];\r\n   //var rutaCandidatp=[],[];\r\n   //console.log(Rolpeticion)\r\n\r\n\r\n   if(ruta !='/api/login'){\r\n       if(metodo !='OPTIONS'){\r\n           //console.log(req.headers)\r\n        if(req.headers.authorization){\r\n            let token =req.headers.authorization.split(' ')[1]\r\n            jwt.verify(token,secret,function(error,decoded){\r\n                if(error){\r\n                    res.status(403).json({\r\n                Messaje : error\r\n            })\r\n                }else{ \r\n                    console.log();\r\n                    var RolToken=[];\r\n                    for (let index = 0; index < decoded.aux[0].roles.length; index++) {\r\n                        RolToken[index]=decoded.aux[0].roles[index].RolNombre;\r\n                    }\r\n                    console.log(RolToken)\r\n                    next(); \r\n                }\r\n            })\r\n\r\n  \r\n           }else{\r\n            res.status(403).json({\r\n                Messaje :'No Posee Token de validacion'\r\n            })\r\n           }\r\n       }else next();\r\n       \r\n   }else next();\r\n\r\n}\r\n\r\n/*\r\n \r\n*/"
      ]
    },
    "sourceType": "script",
    "mtime": 1577047620736
  },
  "{\"sourceRoot\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\",\"filename\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\\\\src\\\\routes\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "filename": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar router = express.Router();\nrouter.get('/consulta', function (req, res) {\n  res.redirect('consulta.html');\n});\nrouter.get('/json', function (req, res) {\n  res.json({\n    message: 'Behold The MEVN Stack!'\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwicmVkaXJlY3QiLCJqc29uIiwibWVzc2FnZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTyxHQUFFQyxPQUFPLENBQUUsU0FBRixDQUF0Qjs7QUFFQSxJQUFNQyxNQUFNLEdBQUVGLE9BQU8sQ0FBQ0csTUFBUixFQUFkO0FBR0FELE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLFdBQVgsRUFBdUIsVUFBU0MsR0FBVCxFQUFhQyxHQUFiLEVBQWlCO0FBQ3BDQSxFQUFBQSxHQUFHLENBQUNDLFFBQUosQ0FBYSxlQUFiO0FBRUgsQ0FIRDtBQUtBTCxNQUFNLENBQUNFLEdBQVAsQ0FBVyxPQUFYLEVBQW1CLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFhO0FBQzVCQSxFQUFBQSxHQUFHLENBQUNFLElBQUosQ0FBUztBQUNMQyxJQUFBQSxPQUFPLEVBQUU7QUFESixHQUFUO0FBR0gsQ0FKRDtBQU1BQyxNQUFNLENBQUNDLE9BQVAsR0FBZVQsTUFBZiIsInNvdXJjZVJvb3QiOiJEOlxcVVNVQVJJT1xcRG9jdW1lbnRzXFxQcm95ZWN0b3NcXEUtdm90ZVxcRS12b3RlLUJhY2tlbmRcXEUtdm90ZS1CYWNrZW5kXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPXJlcXVpcmUgKCdleHByZXNzJyk7XHJcblxyXG5jb25zdCByb3V0ZXI9IGV4cHJlc3MuUm91dGVyKCk7XHJcblxyXG5cclxucm91dGVyLmdldCgnL2NvbnN1bHRhJyxmdW5jdGlvbihyZXEscmVzKXtcclxuICAgIHJlcy5yZWRpcmVjdCgnY29uc3VsdGEuaHRtbCcpO1xyXG5cclxufSlcclxuXHJcbnJvdXRlci5nZXQoJy9qc29uJywocmVxLCByZXMpID0+e1xyXG4gICAgcmVzLmpzb24oe1xyXG4gICAgICAgIG1lc3NhZ2U6ICdCZWhvbGQgVGhlIE1FVk4gU3RhY2shJ1xyXG4gICAgfSk7XHJcbn0pO1xyXG5cclxubW9kdWxlLmV4cG9ydHM9cm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "redirect",
        "json",
        "message",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAEC,OAAO,CAAE,SAAF,CAAtB;;AAEA,IAAMC,MAAM,GAAEF,OAAO,CAACG,MAAR,EAAd;AAGAD,MAAM,CAACE,GAAP,CAAW,WAAX,EAAuB,UAASC,GAAT,EAAaC,GAAb,EAAiB;AACpCA,EAAAA,GAAG,CAACC,QAAJ,CAAa,eAAb;AAEH,CAHD;AAKAL,MAAM,CAACE,GAAP,CAAW,OAAX,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAa;AAC5BA,EAAAA,GAAG,CAACE,IAAJ,CAAS;AACLC,IAAAA,OAAO,EAAE;AADJ,GAAT;AAGH,CAJD;AAMAC,MAAM,CAACC,OAAP,GAAeT,MAAf",
      "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
      "sourcesContent": [
        "const express =require ('express');\r\n\r\nconst router= express.Router();\r\n\r\n\r\nrouter.get('/consulta',function(req,res){\r\n    res.redirect('consulta.html');\r\n\r\n})\r\n\r\nrouter.get('/json',(req, res) =>{\r\n    res.json({\r\n        message: 'Behold The MEVN Stack!'\r\n    });\r\n});\r\n\r\nmodule.exports=router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577047620736
  },
  "{\"sourceRoot\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\",\"filename\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\\\\src\\\\routes\\\\home.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "filename": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\home.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\home.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\home.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
        "sourceFileName": "home.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar router = express.Router();\nrouter.get('/', function (req, res) {\n  res.json({\n    message: 'HOME'\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhvbWUuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJnZXQiLCJyZXEiLCJyZXMiLCJqc29uIiwibWVzc2FnZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTyxHQUFFQyxPQUFPLENBQUUsU0FBRixDQUF0Qjs7QUFFQSxJQUFNQyxNQUFNLEdBQUVGLE9BQU8sQ0FBQ0csTUFBUixFQUFkO0FBRUFELE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLEdBQVgsRUFBZSxVQUFTQyxHQUFULEVBQWFDLEdBQWIsRUFBaUI7QUFDNUJBLEVBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTO0FBQ0xDLElBQUFBLE9BQU8sRUFBRTtBQURKLEdBQVQ7QUFJSCxDQUxEO0FBUUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFlUixNQUFmIiwic291cmNlUm9vdCI6IkQ6XFxVU1VBUklPXFxEb2N1bWVudHNcXFByb3llY3Rvc1xcRS12b3RlXFxFLXZvdGUtQmFja2VuZFxcRS12b3RlLUJhY2tlbmRcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9cmVxdWlyZSAoJ2V4cHJlc3MnKTtcclxuXHJcbmNvbnN0IHJvdXRlcj0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxuXHJcbnJvdXRlci5nZXQoJy8nLGZ1bmN0aW9uKHJlcSxyZXMpe1xyXG4gICAgcmVzLmpzb24oe1xyXG4gICAgICAgIG1lc3NhZ2U6ICdIT01FJ1xyXG4gICAgfSk7XHJcblxyXG59KVxyXG5cclxuXHJcbm1vZHVsZS5leHBvcnRzPXJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "home.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "json",
        "message",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAEC,OAAO,CAAE,SAAF,CAAtB;;AAEA,IAAMC,MAAM,GAAEF,OAAO,CAACG,MAAR,EAAd;AAEAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAe,UAASC,GAAT,EAAaC,GAAb,EAAiB;AAC5BA,EAAAA,GAAG,CAACC,IAAJ,CAAS;AACLC,IAAAA,OAAO,EAAE;AADJ,GAAT;AAIH,CALD;AAQAC,MAAM,CAACC,OAAP,GAAeR,MAAf",
      "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
      "sourcesContent": [
        "const express =require ('express');\r\n\r\nconst router= express.Router();\r\n\r\nrouter.get('/',function(req,res){\r\n    res.json({\r\n        message: 'HOME'\r\n    });\r\n\r\n})\r\n\r\n\r\nmodule.exports=router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577047620736
  },
  "{\"sourceRoot\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\",\"filename\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\\\\src\\\\routes\\\\login.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "filename": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\login.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\login.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\login.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
        "sourceFileName": "login.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar express = require('express');\n\nvar router = express.Router();\n\nvar dbconnection = require('../models/dbconnection');\n\nvar conexion = dbconnection();\n\nvar jwt = require('jsonwebtoken');\n\nvar secret = 'evote';\nrouter.post('/',\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var aux, _req$body, UsuNombre, UsuContraseña;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _req$body = req.body, UsuNombre = _req$body.UsuNombre, UsuContraseña = _req$body.UsuContraseña;\n            conexion.query('call logintemp(?,?)', [UsuNombre, UsuContraseña], function (err, result) {\n              if (err) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              } else {\n                if (result[0].length > 0) {\n                  //console.log(result[0])\n                  aux = [result[0][0]];\n                  conexion.query('SELECT RolNombre FROM tblrolusuario INNER JOIN' + ' tblusuario on (UsuCodigo = RolUsuUsuCodigo)' + ' INNER JOIN tblrol on(RolCodigo=RolUsuRolCodigo)WHERE UsuNombre = ?', [aux[0].UsuNombre], function (err, result) {\n                    if (err) {\n                      res.status(500).json({\n                        message: err\n                      });\n                    } else {\n                      //aqui se autentica\n                      aux[0].roles = result;\n                      var payload = {\n                        aux: aux\n                      }; //var a= JSON.stringify(result)\n                      //var b=a.replace(/[{}]/gi,'');\n                      //b=b.replace('[','');\n                      // b=b.replace(']','');\n                      //b=JSON.parse(a)\n\n                      jwt.sign(payload, secret, {\n                        expiresIn: 300\n                      }, function (error, token) {\n                        if (error) {\n                          console.log(error);\n                        } else {\n                          aux[0].token = token;\n                          res.status(200).json(aux[0]);\n                        }\n                      });\n                    }\n                  });\n                } else {\n                  res.status(404).json({\n                    message: 'Usuario O contraseña incorrecta',\n                    Method: 'POST',\n                    Status: 'No autenticado'\n                  });\n                }\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZGJjb25uZWN0aW9uIiwiY29uZXhpb24iLCJqd3QiLCJzZWNyZXQiLCJwb3N0IiwicmVxIiwicmVzIiwiYm9keSIsIlVzdU5vbWJyZSIsIlVzdUNvbnRyYXNlw7FhIiwicXVlcnkiLCJlcnIiLCJyZXN1bHQiLCJzdGF0dXMiLCJqc29uIiwibWVzc2FnZSIsImxlbmd0aCIsImF1eCIsInJvbGVzIiwicGF5bG9hZCIsInNpZ24iLCJleHBpcmVzSW4iLCJlcnJvciIsInRva2VuIiwiY29uc29sZSIsImxvZyIsIk1ldGhvZCIsIlN0YXR1cyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjs7QUFDQSxJQUFNQyxZQUFZLEdBQUdILE9BQU8sQ0FBQyx3QkFBRCxDQUE1Qjs7QUFDQSxJQUFNSSxRQUFRLEdBQUdELFlBQVksRUFBN0I7O0FBQ0EsSUFBTUUsR0FBRyxHQUFFTCxPQUFPLENBQUMsY0FBRCxDQUFsQjs7QUFDQSxJQUFNTSxNQUFNLEdBQUMsT0FBYjtBQUVBTCxNQUFNLENBQUNNLElBQVAsQ0FBWSxHQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQkFBaUIsaUJBQWdCQyxHQUFoQixFQUFxQkMsR0FBckI7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHdCQUV3QkQsR0FBRyxDQUFDRSxJQUY1QixFQUVMQyxTQUZLLGFBRUxBLFNBRkssRUFFTUMsYUFGTixhQUVNQSxhQUZOO0FBR2JSLFlBQUFBLFFBQVEsQ0FBQ1MsS0FBVCxDQUFlLHFCQUFmLEVBQ0ksQ0FBQ0YsU0FBRCxFQUFZQyxhQUFaLENBREosRUFFSSxVQUFDRSxHQUFELEVBQU1DLE1BQU4sRUFBaUI7QUFDYixrQkFBSUQsR0FBSixFQUFTO0FBQ0xMLGdCQUFBQSxHQUFHLENBQUNPLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUNqQkMsa0JBQUFBLE9BQU8sRUFBRTtBQURRLGlCQUFyQjtBQUdILGVBSkQsTUFJTztBQUNILG9CQUFJSCxNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVVJLE1BQVYsR0FBbUIsQ0FBdkIsRUFBMEI7QUFDdEI7QUFDQUMsa0JBQUFBLEdBQUcsR0FBRyxDQUFDTCxNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVUsQ0FBVixDQUFELENBQU47QUFDQVgsa0JBQUFBLFFBQVEsQ0FBQ1MsS0FBVCxDQUFlLG1EQUNYLDhDQURXLEdBRVgscUVBRkosRUFHSSxDQUFDTyxHQUFHLENBQUMsQ0FBRCxDQUFILENBQU9ULFNBQVIsQ0FISixFQUlJLFVBQUNHLEdBQUQsRUFBTUMsTUFBTixFQUFpQjtBQUNiLHdCQUFJRCxHQUFKLEVBQVM7QUFDTEwsc0JBQUFBLEdBQUcsQ0FBQ08sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ2pCQyx3QkFBQUEsT0FBTyxFQUFFSjtBQURRLHVCQUFyQjtBQUdILHFCQUpELE1BSU87QUFDSDtBQUNBTSxzQkFBQUEsR0FBRyxDQUFDLENBQUQsQ0FBSCxDQUFPQyxLQUFQLEdBQWVOLE1BQWY7QUFDQSwwQkFBSU8sT0FBTyxHQUFDO0FBQ1JGLHdCQUFBQSxHQUFHLEVBQUhBO0FBRFEsdUJBQVosQ0FIRyxDQU1IO0FBQ0E7QUFDQTtBQUNEO0FBQ0M7O0FBRUFmLHNCQUFBQSxHQUFHLENBQUNrQixJQUFKLENBQVNELE9BQVQsRUFBaUJoQixNQUFqQixFQUF3QjtBQUFFa0Isd0JBQUFBLFNBQVMsRUFBRTtBQUFiLHVCQUF4QixFQUEyQyxVQUFTQyxLQUFULEVBQWVDLEtBQWYsRUFBcUI7QUFDNUQsNEJBQUdELEtBQUgsRUFBUztBQUNORSwwQkFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlILEtBQVo7QUFDRix5QkFGRCxNQUVLO0FBQ0RMLDBCQUFBQSxHQUFHLENBQUMsQ0FBRCxDQUFILENBQU9NLEtBQVAsR0FBYUEsS0FBYjtBQUNBakIsMEJBQUFBLEdBQUcsQ0FBQ08sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRyxHQUFHLENBQUMsQ0FBRCxDQUF4QjtBQUNIO0FBQ0osdUJBUEQ7QUFRSDtBQUNKLG1CQTlCTDtBQStCSCxpQkFsQ0QsTUFrQ087QUFDSFgsa0JBQUFBLEdBQUcsQ0FBQ08sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ2pCQyxvQkFBQUEsT0FBTyxFQUFFLGlDQURRO0FBRWpCVyxvQkFBQUEsTUFBTSxFQUFFLE1BRlM7QUFHakJDLG9CQUFBQSxNQUFNLEVBQUU7QUFIUyxtQkFBckI7QUFLSDtBQUNKO0FBQ0osYUFsREw7O0FBSGE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBakI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUF5REFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQi9CLE1BQWpCIiwic291cmNlUm9vdCI6IkQ6XFxVU1VBUklPXFxEb2N1bWVudHNcXFByb3llY3Rvc1xcRS12b3RlXFxFLXZvdGUtQmFja2VuZFxcRS12b3RlLUJhY2tlbmRcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcclxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxuY29uc3QgZGJjb25uZWN0aW9uID0gcmVxdWlyZSgnLi4vbW9kZWxzL2RiY29ubmVjdGlvbicpO1xyXG5jb25zdCBjb25leGlvbiA9IGRiY29ubmVjdGlvbigpO1xyXG5jb25zdCBqd3Q9IHJlcXVpcmUoJ2pzb253ZWJ0b2tlbicpO1xyXG5jb25zdCBzZWNyZXQ9J2V2b3RlJztcclxuXHJcbnJvdXRlci5wb3N0KCcvJywgYXN5bmMgZnVuY3Rpb24gKHJlcSwgcmVzKSB7XHJcbiAgICB2YXIgYXV4O1xyXG4gICAgY29uc3QgeyBVc3VOb21icmUsIFVzdUNvbnRyYXNlw7FhIH0gPSByZXEuYm9keTtcclxuICAgIGNvbmV4aW9uLnF1ZXJ5KCdjYWxsIGxvZ2ludGVtcCg/LD8pJyxcclxuICAgICAgICBbVXN1Tm9tYnJlLCBVc3VDb250cmFzZcOxYV0sXHJcbiAgICAgICAgKGVyciwgcmVzdWx0KSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChlcnIpIHtcclxuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnT2N1cnJpbyB1biBlcnJvcicsXHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdFswXS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhyZXN1bHRbMF0pXHJcbiAgICAgICAgICAgICAgICAgICAgYXV4ID0gW3Jlc3VsdFswXVswXV07XHJcbiAgICAgICAgICAgICAgICAgICAgY29uZXhpb24ucXVlcnkoJ1NFTEVDVCBSb2xOb21icmUgRlJPTSB0Ymxyb2x1c3VhcmlvIElOTkVSIEpPSU4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJyB0Ymx1c3VhcmlvIG9uIChVc3VDb2RpZ28gPSBSb2xVc3VVc3VDb2RpZ28pJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICcgSU5ORVIgSk9JTiB0Ymxyb2wgb24oUm9sQ29kaWdvPVJvbFVzdVJvbENvZGlnbylXSEVSRSBVc3VOb21icmUgPSA/JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgW2F1eFswXS5Vc3VOb21icmVdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAoZXJyLCByZXN1bHQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlcnIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGVycixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2FxdWkgc2UgYXV0ZW50aWNhXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXV4WzBdLnJvbGVzID0gcmVzdWx0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwYXlsb2FkPXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXV4XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL3ZhciBhPSBKU09OLnN0cmluZ2lmeShyZXN1bHQpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy92YXIgYj1hLnJlcGxhY2UoL1t7fV0vZ2ksJycpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vYj1iLnJlcGxhY2UoJ1snLCcnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGI9Yi5yZXBsYWNlKCddJywnJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9iPUpTT04ucGFyc2UoYSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBqd3Quc2lnbihwYXlsb2FkLHNlY3JldCx7IGV4cGlyZXNJbjogMzAwIH0sZnVuY3Rpb24oZXJyb3IsdG9rZW4pe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihlcnJvcil7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF1eFswXS50b2tlbj10b2tlbjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKGF1eFswXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDQwNCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdVc3VhcmlvIE8gY29udHJhc2XDsWEgaW5jb3JyZWN0YScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBTdGF0dXM6ICdObyBhdXRlbnRpY2FkbydcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuXHJcblxyXG59KVxyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "login.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "dbconnection",
        "conexion",
        "jwt",
        "secret",
        "post",
        "req",
        "res",
        "body",
        "UsuNombre",
        "UsuContraseña",
        "query",
        "err",
        "result",
        "status",
        "json",
        "message",
        "length",
        "aux",
        "roles",
        "payload",
        "sign",
        "expiresIn",
        "error",
        "token",
        "console",
        "log",
        "Method",
        "Status",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AACA,IAAMC,YAAY,GAAGH,OAAO,CAAC,wBAAD,CAA5B;;AACA,IAAMI,QAAQ,GAAGD,YAAY,EAA7B;;AACA,IAAME,GAAG,GAAEL,OAAO,CAAC,cAAD,CAAlB;;AACA,IAAMM,MAAM,GAAC,OAAb;AAEAL,MAAM,CAACM,IAAP,CAAY,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAiB,iBAAgBC,GAAhB,EAAqBC,GAArB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEwBD,GAAG,CAACE,IAF5B,EAELC,SAFK,aAELA,SAFK,EAEMC,aAFN,aAEMA,aAFN;AAGbR,YAAAA,QAAQ,CAACS,KAAT,CAAe,qBAAf,EACI,CAACF,SAAD,EAAYC,aAAZ,CADJ,EAEI,UAACE,GAAD,EAAMC,MAAN,EAAiB;AACb,kBAAID,GAAJ,EAAS;AACLL,gBAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,kBAAAA,OAAO,EAAE;AADQ,iBAArB;AAGH,eAJD,MAIO;AACH,oBAAIH,MAAM,CAAC,CAAD,CAAN,CAAUI,MAAV,GAAmB,CAAvB,EAA0B;AACtB;AACAC,kBAAAA,GAAG,GAAG,CAACL,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAD,CAAN;AACAX,kBAAAA,QAAQ,CAACS,KAAT,CAAe,mDACX,8CADW,GAEX,qEAFJ,EAGI,CAACO,GAAG,CAAC,CAAD,CAAH,CAAOT,SAAR,CAHJ,EAII,UAACG,GAAD,EAAMC,MAAN,EAAiB;AACb,wBAAID,GAAJ,EAAS;AACLL,sBAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,wBAAAA,OAAO,EAAEJ;AADQ,uBAArB;AAGH,qBAJD,MAIO;AACH;AACAM,sBAAAA,GAAG,CAAC,CAAD,CAAH,CAAOC,KAAP,GAAeN,MAAf;AACA,0BAAIO,OAAO,GAAC;AACRF,wBAAAA,GAAG,EAAHA;AADQ,uBAAZ,CAHG,CAMH;AACA;AACA;AACD;AACC;;AAEAf,sBAAAA,GAAG,CAACkB,IAAJ,CAASD,OAAT,EAAiBhB,MAAjB,EAAwB;AAAEkB,wBAAAA,SAAS,EAAE;AAAb,uBAAxB,EAA2C,UAASC,KAAT,EAAeC,KAAf,EAAqB;AAC5D,4BAAGD,KAAH,EAAS;AACNE,0BAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACF,yBAFD,MAEK;AACDL,0BAAAA,GAAG,CAAC,CAAD,CAAH,CAAOM,KAAP,GAAaA,KAAb;AACAjB,0BAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBG,GAAG,CAAC,CAAD,CAAxB;AACH;AACJ,uBAPD;AAQH;AACJ,mBA9BL;AA+BH,iBAlCD,MAkCO;AACHX,kBAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,oBAAAA,OAAO,EAAE,iCADQ;AAEjBW,oBAAAA,MAAM,EAAE,MAFS;AAGjBC,oBAAAA,MAAM,EAAE;AAHS,mBAArB;AAKH;AACJ;AACJ,aAlDL;;AAHa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA;AAyDAC,MAAM,CAACC,OAAP,GAAiB/B,MAAjB",
      "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
      "sourcesContent": [
        "const express = require('express');\r\nconst router = express.Router();\r\nconst dbconnection = require('../models/dbconnection');\r\nconst conexion = dbconnection();\r\nconst jwt= require('jsonwebtoken');\r\nconst secret='evote';\r\n\r\nrouter.post('/', async function (req, res) {\r\n    var aux;\r\n    const { UsuNombre, UsuContraseña } = req.body;\r\n    conexion.query('call logintemp(?,?)',\r\n        [UsuNombre, UsuContraseña],\r\n        (err, result) => {\r\n            if (err) {\r\n                res.status(500).json({\r\n                    message: 'Ocurrio un error',\r\n                })\r\n            } else {\r\n                if (result[0].length > 0) {\r\n                    //console.log(result[0])\r\n                    aux = [result[0][0]];\r\n                    conexion.query('SELECT RolNombre FROM tblrolusuario INNER JOIN' +\r\n                        ' tblusuario on (UsuCodigo = RolUsuUsuCodigo)' +\r\n                        ' INNER JOIN tblrol on(RolCodigo=RolUsuRolCodigo)WHERE UsuNombre = ?',\r\n                        [aux[0].UsuNombre],\r\n                        (err, result) => {\r\n                            if (err) {\r\n                                res.status(500).json({\r\n                                    message: err,\r\n                                })\r\n                            } else {\r\n                                //aqui se autentica\r\n                                aux[0].roles = result;\r\n                                var payload={\r\n                                    aux\r\n                                };\r\n                                //var a= JSON.stringify(result)\r\n                                //var b=a.replace(/[{}]/gi,'');\r\n                                //b=b.replace('[','');\r\n                               // b=b.replace(']','');\r\n                                //b=JSON.parse(a)\r\n                                \r\n                                jwt.sign(payload,secret,{ expiresIn: 300 },function(error,token){\r\n                                    if(error){\r\n                                       console.log(error)\r\n                                    }else{\r\n                                        aux[0].token=token;\r\n                                        res.status(200).json(aux[0]);\r\n                                    }\r\n                                })\r\n                            }\r\n                        })\r\n                } else {\r\n                    res.status(404).json({\r\n                        message: 'Usuario O contraseña incorrecta',\r\n                        Method: 'POST',\r\n                        Status: 'No autenticado'\r\n                    })\r\n                }\r\n            }\r\n        })\r\n\r\n\r\n})\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577047620736
  },
  "{\"sourceRoot\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\",\"filename\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\\\\src\\\\models\\\\dbconnection.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "filename": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\models\\dbconnection.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\models\\dbconnection.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\models\\dbconnection.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\models",
        "sourceFileName": "dbconnection.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mysql = require('mysql');\n\nmodule.exports = function () {\n  return mysql.createConnection({\n    host: '198.71.225.53',\n    user: 'evote',\n    password: 'evote123',\n    database: 'E-VOTE_pruebas'\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiY29ubmVjdGlvbi5qcyJdLCJuYW1lcyI6WyJteXNxbCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiY3JlYXRlQ29ubmVjdGlvbiIsImhvc3QiLCJ1c2VyIiwicGFzc3dvcmQiLCJkYXRhYmFzZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsWUFBSTtBQUNyQixTQUFPSCxLQUFLLENBQUNJLGdCQUFOLENBQXVCO0FBQzFCQyxJQUFBQSxJQUFJLEVBQUMsZUFEcUI7QUFFMUJDLElBQUFBLElBQUksRUFBRSxPQUZvQjtBQUcxQkMsSUFBQUEsUUFBUSxFQUFDLFVBSGlCO0FBSTFCQyxJQUFBQSxRQUFRLEVBQUM7QUFKaUIsR0FBdkIsQ0FBUDtBQU1DLENBUEQiLCJzb3VyY2VSb290IjoiRDpcXFVTVUFSSU9cXERvY3VtZW50c1xcUHJveWVjdG9zXFxFLXZvdGVcXEUtdm90ZS1CYWNrZW5kXFxFLXZvdGUtQmFja2VuZFxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBteXNxbCA9IHJlcXVpcmUoJ215c3FsJyk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9ICgpPT57XHJcbnJldHVybiBteXNxbC5jcmVhdGVDb25uZWN0aW9uKHtcclxuICAgIGhvc3Q6JzE5OC43MS4yMjUuNTMnLFxyXG4gICAgdXNlcjogJ2V2b3RlJyxcclxuICAgIHBhc3N3b3JkOidldm90ZTEyMycsXHJcbiAgICBkYXRhYmFzZTonRS1WT1RFX3BydWViYXMnXHJcbn0pXHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "dbconnection.js"
      ],
      "names": [
        "mysql",
        "require",
        "module",
        "exports",
        "createConnection",
        "host",
        "user",
        "password",
        "database"
      ],
      "mappings": ";;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,YAAI;AACrB,SAAOH,KAAK,CAACI,gBAAN,CAAuB;AAC1BC,IAAAA,IAAI,EAAC,eADqB;AAE1BC,IAAAA,IAAI,EAAE,OAFoB;AAG1BC,IAAAA,QAAQ,EAAC,UAHiB;AAI1BC,IAAAA,QAAQ,EAAC;AAJiB,GAAvB,CAAP;AAMC,CAPD",
      "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\models",
      "sourcesContent": [
        "const mysql = require('mysql');\r\n\r\nmodule.exports = ()=>{\r\nreturn mysql.createConnection({\r\n    host:'198.71.225.53',\r\n    user: 'evote',\r\n    password:'evote123',\r\n    database:'E-VOTE_pruebas'\r\n})\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1577047620736
  },
  "{\"sourceRoot\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\",\"filename\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\\\\src\\\\routes\\\\usuario.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "filename": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\usuario.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\usuario.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\usuario.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
        "sourceFileName": "usuario.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar express = require('express');\n\nvar router = express.Router();\n\nvar dbconnection = require('../models/dbconnection');\n\nvar conexion = dbconnection();\nrouter.get('/',\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            conexion.query('select * from tblpersona', function (err, result) {\n              if (err) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              } else {\n                res.status(200).json(result);\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nrouter.get('/:codigo',\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            conexion.query('select * from tblpersona where PerCodigo= ?', [req.params.codigo], function (err, result) {\n              if (err) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              } else {\n                res.status(200).json(result);\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nrouter.post('/',\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$body, PerDocumento, PerNombre, PerApellido, EstFicha, EstJornada, EstProgForm;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log(req.body);\n            _req$body = req.body, PerDocumento = _req$body.PerDocumento, PerNombre = _req$body.PerNombre, PerApellido = _req$body.PerApellido, EstFicha = _req$body.EstFicha, EstJornada = _req$body.EstJornada, EstProgForm = _req$body.EstProgForm;\n            conexion.query('call Agrear_Estudiante_persona(?,?,?,?,?,?)', [PerDocumento, PerNombre, PerApellido, EstFicha, EstJornada, EstProgForm], function (err, result) {\n              if (err) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              } else {\n                res.status(200).json({\n                  message: 'Usuario agregado satisfactoriamente',\n                  Method: 'POST',\n                  Status: 'Recibido'\n                });\n              }\n            });\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nrouter.put('/:codigo',\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(req, res) {\n    var _req$body2, PerDocumento, PerNombre, PerApellido;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            console.log(req.params.codigo);\n            _req$body2 = req.body, PerDocumento = _req$body2.PerDocumento, PerNombre = _req$body2.PerNombre, PerApellido = _req$body2.PerApellido;\n            console.log(req.body);\n            conexion.query('Update tblpersona Set PerDocumento= ? ,PerNombre= ?,PerApellido= ? where PerCodigo= ?', [PerDocumento, PerNombre, PerApellido, req.params.codigo], function (err, result) {\n              if (err) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              } else {\n                res.status(200).json({\n                  message: ' Actualizado satisfactoriamente',\n                  Method: 'PUT',\n                  Status: 'Actualizado'\n                });\n              }\n            });\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}());\nrouter[\"delete\"]('/:codigo',\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(req, res) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            console.log(req.params.codigo);\n            conexion.query('delete from tblpersona where PerCodigo= ?', [req.params.codigo], function (err, result) {\n              if (err) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              } else {\n                res.status(200).json({\n                  message: 'Usuario Elimiando Saisfactoriamente',\n                  Method: 'PUT',\n                  Status: 'Eliminado'\n                });\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}());\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "usuario.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "dbconnection",
        "conexion",
        "get",
        "req",
        "res",
        "query",
        "err",
        "result",
        "status",
        "json",
        "message",
        "params",
        "codigo",
        "post",
        "console",
        "log",
        "body",
        "PerDocumento",
        "PerNombre",
        "PerApellido",
        "EstFicha",
        "EstJornada",
        "EstProgForm",
        "Method",
        "Status",
        "put",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
      "sourcesContent": [
        "const express =require ('express');\r\nconst router= express.Router();\r\nconst dbconnection = require('../models/dbconnection');\r\nconst conexion= dbconnection();\r\n\r\n\r\n\r\nrouter.get('/', async function(req,res){\r\n\r\n    conexion.query('select * from tblpersona',(err,result)=>{\r\n        if (err) {\r\n            res.status(500).json({\r\n               message: 'Ocurrio un error',\r\n             })\r\n         }else{\r\n           res.status(200).json(result);\r\n         }\r\n       })\r\n   });\r\n\r\n\r\n\r\n   router.get('/:codigo', async function(req,res){\r\n    conexion.query('select * from tblpersona where PerCodigo= ?',[req.params.codigo],\r\n    (err,result)=>{\r\n        if (err) {\r\n            res.status(500).json({\r\n               message: 'Ocurrio un error',\r\n             })\r\n         }else{\r\n           res.status(200).json(result);\r\n         }\r\n    })\r\n  });\r\n\r\nrouter.post('/', async function(req,res){\r\n  console.log(req.body)\r\n    const {PerDocumento,PerNombre,PerApellido,EstFicha,EstJornada,EstProgForm}=req.body;\r\n    conexion.query('call Agrear_Estudiante_persona(?,?,?,?,?,?)',\r\n    [PerDocumento,PerNombre,PerApellido,EstFicha,EstJornada,EstProgForm],\r\n    (err,result)=>{\r\n        if (err) {\r\n             res.status(500).json({\r\n                message: 'Ocurrio un error',\r\n              })\r\n          }else{\r\n            res.status(200).json({\r\n                message: 'Usuario agregado satisfactoriamente',\r\n                Method: 'POST',\r\n                Status: 'Recibido'\r\n              })\r\n          }\r\n    })\r\n\r\n});\r\n\r\nrouter.put('/:codigo', async function(req,res){\r\n    console.log(req.params.codigo);\r\n    const {PerDocumento,PerNombre,PerApellido}=req.body;\r\n    console.log(req.body);\r\n    conexion.query('Update tblpersona Set PerDocumento= ? ,PerNombre= ?,PerApellido= ? where PerCodigo= ?',\r\n    [PerDocumento,PerNombre,PerApellido,req.params.codigo],\r\n    (err,result)=>{\r\n        if (err) {\r\n            res.status(500).json({\r\n               message: 'Ocurrio un error',\r\n             })\r\n         }else{\r\n           res.status(200).json({\r\n            message: ' Actualizado satisfactoriamente',\r\n            Method: 'PUT',\r\n            Status: 'Actualizado'\r\n             })\r\n         }\r\n    })\r\n});\r\n\r\n\r\nrouter.delete('/:codigo', async function(req,res){\r\n    console.log(req.params.codigo);\r\n    conexion.query('delete from tblpersona where PerCodigo= ?',[req.params.codigo],\r\n    (err,result)=>{\r\n        if (err) {\r\n            res.status(500).json({\r\n               message: 'Ocurrio un error',\r\n             })\r\n         }else{\r\n           res.status(200).json({\r\n            message: 'Usuario Elimiando Saisfactoriamente',\r\n            Method: 'PUT',\r\n            Status: 'Eliminado'\r\n             })\r\n         }\r\n    })\r\n});\r\nmodule.exports=router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577047620736
  },
  "{\"sourceRoot\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\",\"filename\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\\\\src\\\\routes\\\\aspirante.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "filename": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\aspirante.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\aspirante.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\aspirante.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
        "sourceFileName": "aspirante.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar express = require('express');\n\nvar router = express.Router();\n\nvar dbconnection = require('../models/dbconnection'); // importando el modelo\n\n\nvar conexion = dbconnection();\nrouter.post('/agregar',\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, AspFormPost, AspDoc1, AspDoc2, AspEstado, AspPerCodigo;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //agregar nuevo aspirante\n            _req$body = req.body, AspFormPost = _req$body.AspFormPost, AspDoc1 = _req$body.AspDoc1, AspDoc2 = _req$body.AspDoc2, AspEstado = _req$body.AspEstado, AspPerCodigo = _req$body.AspPerCodigo;\n            conexion.query('INSERT INTO tblaspirante(AspFormPost,AspDoc1,AspDoc2,AspEstado,AspPerCodigo) VALUES(?,?,?,?,?)', [AspFormPost, AspDoc1, AspDoc2, AspEstado, AspPerCodigo], function (err, result) {\n              try {\n                res.json({\n                  message: 'Agregado correctamente'\n                });\n              } catch (error) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nrouter.get('/consultar',\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            //req = va tener la solicitud  res = va tener la respuesta\n            conexion.query('SELECT * FROM tblaspirante', function (err, result) {\n              try {\n                res.json(result);\n              } catch (err) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nrouter.get('/consultar/:codigo',\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            conexion.query('SELECT * FROM tblaspirante WHERE tblaspirante.AspCodigo = ?', [req.params.codigo], function (err, result) {\n              try {\n                res.json(result);\n              } catch (err) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nrouter.put('/actualizar/:codigo',\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(req, res) {\n    var _req$body2, AspDoc1, AspDoc2, AspEstado, AspFormPost, AspPerCodigo;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _req$body2 = req.body, AspDoc1 = _req$body2.AspDoc1, AspDoc2 = _req$body2.AspDoc2, AspEstado = _req$body2.AspEstado, AspFormPost = _req$body2.AspFormPost, AspPerCodigo = _req$body2.AspPerCodigo;\n            conexion.query('UPDATE tblaspirante SET AspDoc1 = ?,AspDoc2 = ?,AspEstado = ?,AspFormPost = ?,AspPerCodigo = ? WHERE AspCodigo = ?', [AspDoc1, AspDoc2, AspEstado, AspFormPost, AspPerCodigo, req.params.codigo], function (err, result) {\n              try {\n                res.json({\n                  message: ' Actualizado satisfactoriamente',\n                  Method: 'PUT',\n                  Status: 'Actualizado'\n                });\n              } catch (err) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}());\nrouter[\"delete\"]('/eliminar/:codigo',\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(req, res) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            conexion.query('DELETE FROM tblaspirante WHERE tblaspirante.AspCodigo = ?', [req.params.codigo], function (err, result) {\n              try {\n                res.json({\n                  message: 'Eliminado satisfactoriamente',\n                  Method: 'PUT',\n                  Status: 'Actualizado'\n                });\n              } catch (error) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}());\nmodule.exports = router; // exportando las rutas\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzcGlyYW50ZS5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsImRiY29ubmVjdGlvbiIsImNvbmV4aW9uIiwicG9zdCIsInJlcSIsInJlcyIsImJvZHkiLCJBc3BGb3JtUG9zdCIsIkFzcERvYzEiLCJBc3BEb2MyIiwiQXNwRXN0YWRvIiwiQXNwUGVyQ29kaWdvIiwicXVlcnkiLCJlcnIiLCJyZXN1bHQiLCJqc29uIiwibWVzc2FnZSIsImVycm9yIiwic3RhdHVzIiwiZ2V0IiwicGFyYW1zIiwiY29kaWdvIiwicHV0IiwiTWV0aG9kIiwiU3RhdHVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFmOztBQUNBLElBQU1DLFlBQVksR0FBR0gsT0FBTyxDQUFDLHdCQUFELENBQTVCLEMsQ0FBd0Q7OztBQUN4RCxJQUFNSSxRQUFRLEdBQUVELFlBQVksRUFBNUI7QUFJQUYsTUFBTSxDQUFDSSxJQUFQLENBQVksVUFBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMEJBQXdCLGlCQUFlQyxHQUFmLEVBQW9CQyxHQUFwQjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTBCO0FBQTFCLHdCQUNtQ0QsR0FBRyxDQUFDRSxJQUR2QyxFQUNqQkMsV0FEaUIsYUFDakJBLFdBRGlCLEVBQ0xDLE9BREssYUFDTEEsT0FESyxFQUNHQyxPQURILGFBQ0dBLE9BREgsRUFDV0MsU0FEWCxhQUNXQSxTQURYLEVBQ3FCQyxZQURyQixhQUNxQkEsWUFEckI7QUFFckJULFlBQUFBLFFBQVEsQ0FBQ1UsS0FBVCxDQUFlLGdHQUFmLEVBQ0EsQ0FBQ0wsV0FBRCxFQUFhQyxPQUFiLEVBQXFCQyxPQUFyQixFQUE2QkMsU0FBN0IsRUFBdUNDLFlBQXZDLENBREEs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dm90ZVxcRS12b3RlLUJhY2tlbmRcXEUtdm90ZS1CYWNrZW5kXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XHJcbmNvbnN0IGRiY29ubmVjdGlvbiA9IHJlcXVpcmUoJy4uL21vZGVscy9kYmNvbm5lY3Rpb24nKTsgLy8gaW1wb3J0YW5kbyBlbCBtb2RlbG9cclxuY29uc3QgY29uZXhpb249IGRiY29ubmVjdGlvbigpO1xyXG5cclxuXHJcblxyXG5yb3V0ZXIucG9zdCgnL2FncmVnYXInLCBhc3luYyBmdW5jdGlvbihyZXEsIHJlcyl7IC8vYWdyZWdhciBudWV2byBhc3BpcmFudGVcclxuY29uc3Qge0FzcEZvcm1Qb3N0LEFzcERvYzEsQXNwRG9jMixBc3BFc3RhZG8sQXNwUGVyQ29kaWdvfT1yZXEuYm9keTtcclxuICAgY29uZXhpb24ucXVlcnkoJ0lOU0VSVCBJTlRPIHRibGFzcGlyYW50ZShBc3BGb3JtUG9zdCxBc3BEb2MxLEFzcERvYzIsQXNwRXN0YWRvLEFzcFBlckNvZGlnbykgVkFMVUVTKD8sPyw/LD8sPyknLFxyXG4gICBbQXNwRm9ybVBvc3QsQXNwRG9jMSxBc3BEb2MyLEFzcEVzdGFkbyxBc3BQZXJDb2RpZ29dLChlcnIscmVzdWx0KT0+e1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgICByZXMuanNvbih7XHJcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdBZ3JlZ2FkbyBjb3JyZWN0YW1lbnRlJ1xyXG4gICAgICAgICB9KVxyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdPY3VycmlvIHVuIGVycm9yJ1xyXG4gICAgICAgICB9KVxyXG4gICAgICB9XHJcbiAgIH0pXHJcbn0pO1xyXG5cclxuXHJcbnJvdXRlci5nZXQoJy9jb25zdWx0YXInLCBhc3luYyBmdW5jdGlvbihyZXEscmVzKXsgLy9yZXEgPSB2YSB0ZW5lciBsYSBzb2xpY2l0dWQgIHJlcyA9IHZhIHRlbmVyIGxhIHJlc3B1ZXN0YVxyXG4gICBjb25leGlvbi5xdWVyeSgnU0VMRUNUICogRlJPTSB0Ymxhc3BpcmFudGUnLChlcnIscmVzdWx0KT0+e1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgICByZXMuanNvbihyZXN1bHQpO1xyXG4gICAgICB9IGNhdGNoIChlcnIpIHtcclxuICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICAgICAgICBtZXNzYWdlOiAnT2N1cnJpbyB1biBlcnJvcicsXHJcbiAgICAgICAgICB9KVxyXG4gICAgICB9XHJcbiAgIH0pXHJcbn0pO1xyXG5cclxucm91dGVyLmdldCgnL2NvbnN1bHRhci86Y29kaWdvJywgYXN5bmMgZnVuY3Rpb24ocmVxLHJlcyl7XHJcbiAgIGNvbmV4aW9uLnF1ZXJ5KCdTRUxFQ1QgKiBGUk9NIHRibGFzcGlyYW50ZSBXSEVSRSB0Ymxhc3BpcmFudGUuQXNwQ29kaWdvID0gPycsW3JlcS5wYXJhbXMuY29kaWdvXSwoZXJyLHJlc3VsdCk9PntcclxuICAgICAgdHJ5IHtcclxuICAgICAgICAgcmVzLmpzb24ocmVzdWx0KTtcclxuICAgICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgbWVzc2FnZTogJ09jdXJyaW8gdW4gZXJyb3InLFxyXG4gICAgICAgICAgfSlcclxuICAgICAgfVxyXG4gICB9KVxyXG59KTtcclxuXHJcbnJvdXRlci5wdXQoJy9hY3R1YWxpemFyLzpjb2RpZ28nLCBhc3luYyBmdW5jdGlvbihyZXEsIHJlcyl7XHJcbiAgIGNvbnN0IHtBc3BEb2MxLEFzcERvYzIsQXNwRXN0YWRvLEFzcEZvcm1Qb3N0LEFzcFBlckNvZGlnb309cmVxLmJvZHk7XHJcbiAgIGNvbmV4aW9uLnF1ZXJ5KCdVUERBVEUgdGJsYXNwaXJhbnRlIFNFVCBBc3BEb2MxID0gPyxBc3BEb2MyID0gPyxBc3BFc3RhZG8gPSA/LEFzcEZvcm1Qb3N0ID0gPyxBc3BQZXJDb2RpZ28gPSA/IFdIRVJFIEFzcENvZGlnbyA9ID8nLFxyXG4gICBbQXNwRG9jMSxBc3BEb2MyLEFzcEVzdGFkbyxBc3BGb3JtUG9zdCxBc3BQZXJDb2RpZ28scmVxLnBhcmFtcy5jb2RpZ29dLChlcnIscmVzdWx0KT0+e1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgICByZXMuanNvbih7XHJcbiAgICAgICAgICAgIG1lc3NhZ2U6ICcgQWN0dWFsaXphZG8gc2F0aXNmYWN0b3JpYW1lbnRlJyxcclxuICAgICAgICAgICAgTWV0aG9kOiAnUFVUJyxcclxuICAgICAgICAgICAgU3RhdHVzOiAnQWN0dWFsaXphZG8nXHJcbiAgICAgICAgICAgICB9KTtcclxuICAgICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgbWVzc2FnZTogJ09jdXJyaW8gdW4gZXJyb3InLFxyXG4gICAgICAgICAgfSlcclxuICAgICAgfVxyXG4gICB9KVxyXG59KTtcclxuXHJcbnJvdXRlci5kZWxldGUoJy9lbGltaW5hci86Y29kaWdvJywgYXN5bmMgZnVuY3Rpb24ocmVxLCByZXMpe1xyXG5cclxuICAgY29uZXhpb24ucXVlcnkoJ0RFTEVURSBGUk9NIHRibGFzcGlyYW50ZSBXSEVSRSB0Ymxhc3BpcmFudGUuQXNwQ29kaWdvID0gPycsW3JlcS5wYXJhbXMuY29kaWdvXSwoZXJyLHJlc3VsdCk9PntcclxuICAgICAgdHJ5IHtcclxuICAgICAgICAgcmVzLmpzb24oe1xyXG4gICAgICAgICAgICBtZXNzYWdlOiAnRWxpbWluYWRvIHNhdGlzZmFjdG9yaWFtZW50ZScsXHJcbiAgICAgICAgICAgIE1ldGhvZDogJ1BVVCcsXHJcbiAgICAgICAgICAgIFN0YXR1czogJ0FjdHVhbGl6YWRvJ1xyXG4gICAgICAgICAgICAgfSk7XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgbWVzc2FnZTogJ09jdXJyaW8gdW4gZXJyb3InLFxyXG4gICAgICAgICAgfSlcclxuICAgICAgfVxyXG4gICB9KVxyXG5cclxufSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cz1yb3V0ZXI7IC8vIGV4cG9ydGFuZG8gbGFzIHJ1dGFzIl19",
    "map": {
      "version": 3,
      "sources": [
        "aspirante.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "dbconnection",
        "conexion",
        "post",
        "req",
        "res",
        "body",
        "AspFormPost",
        "AspDoc1",
        "AspDoc2",
        "AspEstado",
        "AspPerCodigo",
        "query",
        "err",
        "result",
        "json",
        "message",
        "error",
        "status",
        "get",
        "params",
        "codigo",
        "put",
        "Method",
        "Status",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
      "sourcesContent": [
        "const express = require('express');\r\nconst router = express.Router();\r\nconst dbconnection = require('../models/dbconnection'); // importando el modelo\r\nconst conexion= dbconnection();\r\n\r\n\r\n\r\nrouter.post('/agregar', async function(req, res){ //agregar nuevo aspirante\r\nconst {AspFormPost,AspDoc1,AspDoc2,AspEstado,AspPerCodigo}=req.body;\r\n   conexion.query('INSERT INTO tblaspirante(AspFormPost,AspDoc1,AspDoc2,AspEstado,AspPerCodigo) VALUES(?,?,?,?,?)',\r\n   [AspFormPost,AspDoc1,AspDoc2,AspEstado,AspPerCodigo],(err,result)=>{\r\n      try {\r\n         res.json({\r\n            message: 'Agregado correctamente'\r\n         })\r\n      } catch (error) {\r\n         res.status(500).json({\r\n            message: 'Ocurrio un error'\r\n         })\r\n      }\r\n   })\r\n});\r\n\r\n\r\nrouter.get('/consultar', async function(req,res){ //req = va tener la solicitud  res = va tener la respuesta\r\n   conexion.query('SELECT * FROM tblaspirante',(err,result)=>{\r\n      try {\r\n         res.json(result);\r\n      } catch (err) {\r\n         res.status(500).json({\r\n            message: 'Ocurrio un error',\r\n          })\r\n      }\r\n   })\r\n});\r\n\r\nrouter.get('/consultar/:codigo', async function(req,res){\r\n   conexion.query('SELECT * FROM tblaspirante WHERE tblaspirante.AspCodigo = ?',[req.params.codigo],(err,result)=>{\r\n      try {\r\n         res.json(result);\r\n      } catch (err) {\r\n         res.status(500).json({\r\n            message: 'Ocurrio un error',\r\n          })\r\n      }\r\n   })\r\n});\r\n\r\nrouter.put('/actualizar/:codigo', async function(req, res){\r\n   const {AspDoc1,AspDoc2,AspEstado,AspFormPost,AspPerCodigo}=req.body;\r\n   conexion.query('UPDATE tblaspirante SET AspDoc1 = ?,AspDoc2 = ?,AspEstado = ?,AspFormPost = ?,AspPerCodigo = ? WHERE AspCodigo = ?',\r\n   [AspDoc1,AspDoc2,AspEstado,AspFormPost,AspPerCodigo,req.params.codigo],(err,result)=>{\r\n      try {\r\n         res.json({\r\n            message: ' Actualizado satisfactoriamente',\r\n            Method: 'PUT',\r\n            Status: 'Actualizado'\r\n             });\r\n      } catch (err) {\r\n         res.status(500).json({\r\n            message: 'Ocurrio un error',\r\n          })\r\n      }\r\n   })\r\n});\r\n\r\nrouter.delete('/eliminar/:codigo', async function(req, res){\r\n\r\n   conexion.query('DELETE FROM tblaspirante WHERE tblaspirante.AspCodigo = ?',[req.params.codigo],(err,result)=>{\r\n      try {\r\n         res.json({\r\n            message: 'Eliminado satisfactoriamente',\r\n            Method: 'PUT',\r\n            Status: 'Actualizado'\r\n             });\r\n      } catch (error) {\r\n         res.status(500).json({\r\n            message: 'Ocurrio un error',\r\n          })\r\n      }\r\n   })\r\n\r\n});\r\n\r\nmodule.exports=router; // exportando las rutas"
      ]
    },
    "sourceType": "script",
    "mtime": 1577068741683
  },
  "{\"sourceRoot\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\",\"filename\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\\\\src\\\\routes\\\\candidato.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "filename": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\candidato.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\candidato.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\candidato.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
        "sourceFileName": "candidato.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar express = require('express');\n\nvar router = express.Router();\n\nvar dbconnection = require('../models/dbconnection'); // importando el modelo\n\n\nvar conexion = dbconnection();\nrouter.get('/consultar',\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //req = va tener la solicitud  res = va tener la respuesta\n            conexion.query('SELECT * FROM tblcandidato', function (err, result) {\n              try {\n                res.json(result);\n              } catch (err) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nrouter.get('/consultar/:codigo',\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            conexion.query('SELECT * FROM tblcandidato WHERE tblcandidato.CanCodigo = ?', [req.params.codigo], function (err, result) {\n              try {\n                res.json(result);\n              } catch (err) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nrouter.post('/agregar',\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$body, CanNTarjerton, CanFoto, CanEstado, CanProVotCodigo, CanPerCodigo;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _req$body = req.body, CanNTarjerton = _req$body.CanNTarjerton, CanFoto = _req$body.CanFoto, CanEstado = _req$body.CanEstado, CanProVotCodigo = _req$body.CanProVotCodigo, CanPerCodigo = _req$body.CanPerCodigo;\n            conexion.query('INSERT INTO tblcandidato(CanNTarjerton,CanFoto,CanEstado,CanProVotCodigo,CanPerCodigo) VALUES(?,?,?,?,?)', [CanNTarjerton, CanFoto, CanEstado, CanProVotCodigo, CanPerCodigo], function (err, result) {\n              try {\n                res.json({\n                  message: 'Agregado correctamente'\n                });\n              } catch (error) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nrouter.put('/actualizar/:codigo',\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(req, res) {\n    var _req$body2, CanNTarjerton, CanFoto, CanEstado, CanProVotCodigo, CanPerCodigo;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _req$body2 = req.body, CanNTarjerton = _req$body2.CanNTarjerton, CanFoto = _req$body2.CanFoto, CanEstado = _req$body2.CanEstado, CanProVotCodigo = _req$body2.CanProVotCodigo, CanPerCodigo = _req$body2.CanPerCodigo;\n            conexion.query('UPDATE tblcandidato SET CanNTarjerton = ?,CanFoto = ?,CanEstado = ?,CanProVotCodigo = ?,CanPerCodigo = ? WHERE CanCodigo = ?', [CanNTarjerton, CanFoto, CanEstado, CanProVotCodigo, CanPerCodigo, req.params.codigo], function (err, result) {\n              try {\n                res.json({\n                  message: ' Actualizado satisfactoriamente',\n                  Method: 'PUT',\n                  Status: 'Actualizado'\n                });\n              } catch (err) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}());\nrouter[\"delete\"]('/eliminar/:codigo',\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(req, res) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            conexion.query('DELETE FROM tblcandidato WHERE CanCodigo = ?', [req.params.codigo], function (err, result) {\n              try {\n                res.json({\n                  message: 'Eliminado satisfactoriamente',\n                  Method: 'PUT',\n                  Status: 'Eliminado'\n                });\n              } catch (error) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}());\nmodule.exports = router; // exportando las rutas\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "candidato.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "dbconnection",
        "conexion",
        "get",
        "req",
        "res",
        "query",
        "err",
        "result",
        "json",
        "status",
        "message",
        "params",
        "codigo",
        "post",
        "body",
        "CanNTarjerton",
        "CanFoto",
        "CanEstado",
        "CanProVotCodigo",
        "CanPerCodigo",
        "error",
        "put",
        "Method",
        "Status",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
      "sourcesContent": [
        "const express = require('express');\r\nconst router = express.Router();\r\nconst dbconnection = require('../models/dbconnection'); // importando el modelo\r\nconst conexion= dbconnection();\r\n\r\n\r\n\r\nrouter.get('/consultar', async function(req,res){ //req = va tener la solicitud  res = va tener la respuesta\r\n    conexion.query('SELECT * FROM tblcandidato',(err,result)=>{\r\n       try {\r\n          res.json(result);\r\n       } catch (err) {\r\n          res.status(500).json({\r\n             message: 'Ocurrio un error',\r\n           })\r\n       }\r\n    })\r\n });\r\n\r\n router.get('/consultar/:codigo', async function(req,res){\r\n    conexion.query('SELECT * FROM tblcandidato WHERE tblcandidato.CanCodigo = ?',[req.params.codigo],(err,result)=>{\r\n       try {\r\n          res.json(result);\r\n       } catch (err) {\r\n          res.status(500).json({\r\n             message: 'Ocurrio un error',\r\n           })\r\n       }\r\n    })\r\n });\r\n\r\nrouter.post('/agregar', async function(req, res){\r\n    const {CanNTarjerton,CanFoto,CanEstado,CanProVotCodigo,CanPerCodigo}=req.body;\r\n       conexion.query('INSERT INTO tblcandidato(CanNTarjerton,CanFoto,CanEstado,CanProVotCodigo,CanPerCodigo) VALUES(?,?,?,?,?)',\r\n       [CanNTarjerton,CanFoto,CanEstado,CanProVotCodigo,CanPerCodigo],(err,result)=>{\r\n          try {\r\n             res.json({\r\n                message: 'Agregado correctamente'\r\n             })\r\n          } catch (error) {\r\n             res.status(500).json({\r\n                message: 'Ocurrio un error'\r\n             })\r\n          }\r\n       })\r\n    });\r\n\r\n\r\nrouter.put('/actualizar/:codigo', async function(req, res){\r\n    const {CanNTarjerton,CanFoto,CanEstado,CanProVotCodigo,CanPerCodigo}=req.body;\r\n    conexion.query('UPDATE tblcandidato SET CanNTarjerton = ?,CanFoto = ?,CanEstado = ?,CanProVotCodigo = ?,CanPerCodigo = ? WHERE CanCodigo = ?',\r\n    [CanNTarjerton,CanFoto,CanEstado,CanProVotCodigo,CanPerCodigo,req.params.codigo],(err,result)=>{\r\n       try {\r\n          res.json({\r\n                message: ' Actualizado satisfactoriamente',\r\n                Method: 'PUT',\r\n                Status: 'Actualizado'\r\n                });\r\n         } catch (err) {\r\n            res.status(500).json({\r\n             message: 'Ocurrio un error',\r\n             })\r\n           }\r\n        })\r\n     });\r\n\r\nrouter.delete('/eliminar/:codigo', async function(req, res){\r\n    conexion.query('DELETE FROM tblcandidato WHERE CanCodigo = ?',[req.params.codigo],(err,result)=>{\r\n       try {\r\n            res.json({\r\n             message: 'Eliminado satisfactoriamente',\r\n             Method: 'PUT',\r\n             Status: 'Eliminado'\r\n             });\r\n        } catch (error) {\r\n            res.status(500).json({\r\n                message: 'Ocurrio un error',\r\n              })\r\n           }\r\n        })\r\n     });     \r\n\r\nmodule.exports=router; // exportando las rutas"
      ]
    },
    "sourceType": "script",
    "mtime": 1577068735667
  },
  "{\"sourceRoot\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\",\"filename\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\\\\src\\\\routes\\\\estudiante.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "filename": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\estudiante.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\estudiante.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\estudiante.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
        "sourceFileName": "estudiante.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar express = require('express');\n\nvar router = express.Router();\n\nvar dbconnection = require('../models/dbconnection'); // importando el modelo\n\n\nvar conexion = dbconnection();\nrouter.get('/consultar',\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //req = va tener la solicitud  res = va tener la respuesta\n            conexion.query('SELECT * FROM tblestudiante', function (err, result) {\n              try {\n                res.json(result);\n              } catch (err) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nrouter.get('/consultar/:codigo',\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            conexion.query('SELECT * FROM tblestudiante WHERE tblestudiante.EstCodigo = ?', [req.params.codigo], function (err, result) {\n              try {\n                res.json(result);\n              } catch (err) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nrouter.post('/agregar',\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$body, EstFicha, EstEstado, EstPerCodigo, EstJorCodigo, EstProforCodigo, EstHueCodigo;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _req$body = req.body, EstFicha = _req$body.EstFicha, EstEstado = _req$body.EstEstado, EstPerCodigo = _req$body.EstPerCodigo, EstJorCodigo = _req$body.EstJorCodigo, EstProforCodigo = _req$body.EstProforCodigo, EstHueCodigo = _req$body.EstHueCodigo;\n            conexion.query('INSERT INTO tblestudiante(EstFicha,EstEstado,EstPerCodigo,EstJorCodigo,EstProforCodigo,EstHueCodigo) VALUES(?,?,?,?,?,?)', [EstFicha, EstEstado, EstPerCodigo, EstJorCodigo, EstProforCodigo, EstHueCodigo], function (err, result) {\n              try {\n                res.json({\n                  message: 'Agregado correctamente'\n                });\n              } catch (error) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nrouter.put('/actualizar/:codigo',\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(req, res) {\n    var _req$body2, EstFicha, EstEstado, EstPerCodigo, EstJorCodigo, EstProforCodigo, EstHueCodigo;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _req$body2 = req.body, EstFicha = _req$body2.EstFicha, EstEstado = _req$body2.EstEstado, EstPerCodigo = _req$body2.EstPerCodigo, EstJorCodigo = _req$body2.EstJorCodigo, EstProforCodigo = _req$body2.EstProforCodigo, EstHueCodigo = _req$body2.EstHueCodigo;\n            conexion.query('UPDATE tblestudiante SET EstFicha = ?,EstEstado = ?,EstPerCodigo = ?,EstJorCodigo = ?,EstProforCodigo = ?,EstHueCodigo = ? WHERE tblestudiante.EstCodigo = ?', [EstFicha, EstEstado, EstPerCodigo, EstJorCodigo, EstProforCodigo, EstHueCodigo, req.params.codigo], function (err, result) {\n              try {\n                res.json({\n                  message: ' Actualizado satisfactoriamente',\n                  Method: 'PUT',\n                  Status: 'Actualizado'\n                });\n              } catch (err) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}());\nrouter[\"delete\"]('/eliminar/:codigo',\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(req, res) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            conexion.query('DELETE FROM tblestudiante WHERE tblestudiante.EstCodigo = ?', [req.params.codigo], function (err, result) {\n              try {\n                res.json({\n                  message: 'Eliminado satisfactoriamente',\n                  Method: 'PUT',\n                  Status: 'Eliminado'\n                });\n              } catch (error) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}());\nmodule.exports = router; // exportando las rutas\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "estudiante.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "dbconnection",
        "conexion",
        "get",
        "req",
        "res",
        "query",
        "err",
        "result",
        "json",
        "status",
        "message",
        "params",
        "codigo",
        "post",
        "body",
        "EstFicha",
        "EstEstado",
        "EstPerCodigo",
        "EstJorCodigo",
        "EstProforCodigo",
        "EstHueCodigo",
        "error",
        "put",
        "Method",
        "Status",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
      "sourcesContent": [
        "const express = require('express');\r\nconst router = express.Router();\r\nconst dbconnection = require('../models/dbconnection'); // importando el modelo\r\nconst conexion= dbconnection();\r\n\r\nrouter.get('/consultar', async function(req,res){ //req = va tener la solicitud  res = va tener la respuesta\r\n    conexion.query('SELECT * FROM tblestudiante',(err,result)=>{\r\n       try {\r\n          res.json(result);\r\n       } catch (err) {\r\n          res.status(500).json({\r\n             message: 'Ocurrio un error',\r\n           })\r\n       }\r\n    })\r\n });\r\n router.get('/consultar/:codigo', async function(req,res){\r\n    conexion.query('SELECT * FROM tblestudiante WHERE tblestudiante.EstCodigo = ?',[req.params.codigo],(err,result)=>{\r\n       try {\r\n          res.json(result);\r\n       } catch (err) {\r\n          res.status(500).json({\r\n             message: 'Ocurrio un error',\r\n           })\r\n       }\r\n    })\r\n });\r\n\r\nrouter.post('/agregar', async function(req, res){\r\n    const {EstFicha,EstEstado,EstPerCodigo,EstJorCodigo,EstProforCodigo,EstHueCodigo}=req.body;\r\n       conexion.query('INSERT INTO tblestudiante(EstFicha,EstEstado,EstPerCodigo,EstJorCodigo,EstProforCodigo,EstHueCodigo) VALUES(?,?,?,?,?,?)',\r\n       [EstFicha,EstEstado,EstPerCodigo,EstJorCodigo,EstProforCodigo,EstHueCodigo],(err,result)=>{\r\n          try {\r\n             res.json({\r\n                message: 'Agregado correctamente'\r\n             })\r\n          } catch (error) {\r\n             res.status(500).json({\r\n                message: 'Ocurrio un error'\r\n             })\r\n          }\r\n       })\r\n    });\r\n \r\n\r\nrouter.put('/actualizar/:codigo', async function(req, res){\r\n    const {EstFicha,EstEstado,EstPerCodigo,EstJorCodigo,EstProforCodigo,EstHueCodigo}=req.body;\r\n    conexion.query('UPDATE tblestudiante SET EstFicha = ?,EstEstado = ?,EstPerCodigo = ?,EstJorCodigo = ?,EstProforCodigo = ?,EstHueCodigo = ? WHERE tblestudiante.EstCodigo = ?',\r\n    [EstFicha,EstEstado,EstPerCodigo,EstJorCodigo,EstProforCodigo,EstHueCodigo,req.params.codigo],(err,result)=>{\r\n       try {\r\n          res.json({\r\n                message: ' Actualizado satisfactoriamente',\r\n                Method: 'PUT',\r\n                Status: 'Actualizado'\r\n                });\r\n         } catch (err) {\r\n            res.status(500).json({\r\n             message: 'Ocurrio un error',\r\n             })\r\n           }\r\n        })\r\n     }); \r\n\r\nrouter.delete('/eliminar/:codigo', async function(req, res){\r\n    conexion.query('DELETE FROM tblestudiante WHERE tblestudiante.EstCodigo = ?',[req.params.codigo],(err,result)=>{\r\n       try {\r\n            res.json({\r\n             message: 'Eliminado satisfactoriamente',\r\n             Method: 'PUT',\r\n             Status: 'Eliminado'\r\n             });\r\n        } catch (error) {\r\n            res.status(500).json({\r\n                message: 'Ocurrio un error',\r\n              })\r\n           }\r\n        })\r\n     });          \r\n     \r\nmodule.exports=router; // exportando las rutas"
      ]
    },
    "sourceType": "script",
    "mtime": 1577070715303
  },
  "{\"sourceRoot\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\",\"filename\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\\\\src\\\\routes\\\\procesoVotacion.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "filename": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\procesoVotacion.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\procesoVotacion.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\procesoVotacion.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
        "sourceFileName": "procesoVotacion.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar express = require('express');\n\nvar router = express.Router();\n\nvar dbconnection = require('../models/dbconnection'); // importando el modelo\n\n\nvar conexion = dbconnection();\nrouter.get('/consultar',\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //req = va tener la solicitud  res = va tener la respuesta\n            conexion.query('SELECT * FROM tblprocesovotacion', function (err, result) {\n              try {\n                res.json(result);\n              } catch (err) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nrouter.post('/agregar',\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body, ProVotInicio, ProVotFin, ProVotRegEstInicio, ProVotRegEstFin, ProVotValAspInicio, ProVotValAspFin, ProVotRegPropInicio, ProVotRegPropFin, ProVotFechaJornada, ProVotEstado, ProVotAdmCodigo;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _req$body = req.body, ProVotInicio = _req$body.ProVotInicio, ProVotFin = _req$body.ProVotFin, ProVotRegEstInicio = _req$body.ProVotRegEstInicio, ProVotRegEstFin = _req$body.ProVotRegEstFin, ProVotValAspInicio = _req$body.ProVotValAspInicio, ProVotValAspFin = _req$body.ProVotValAspFin, ProVotRegPropInicio = _req$body.ProVotRegPropInicio, ProVotRegPropFin = _req$body.ProVotRegPropFin, ProVotFechaJornada = _req$body.ProVotFechaJornada, ProVotEstado = _req$body.ProVotEstado, ProVotAdmCodigo = _req$body.ProVotAdmCodigo;\n            conexion.query('INSERT INTO tblprocesovotacion(ProVotInicio,ProVotFin,ProVotRegEstInicio,ProVotRegEstFin,ProVotValAspInicio,ProVotValAspFin,ProVotRegPropInicio,ProVotRegPropFin,ProVotFechaJornada,ProVotEstado,ProVotAdmCodigo) VALUES(?,?,?,?,?,?,?,?,?,?,?)', [ProVotInicio, ProVotFin, ProVotRegEstInicio, ProVotRegEstFin, ProVotValAspInicio, ProVotValAspFin, ProVotRegPropInicio, ProVotRegPropFin, ProVotFechaJornada, ProVotEstado, ProVotAdmCodigo], function (err, result) {\n              try {\n                res.json({\n                  message: 'Agregado correctamente'\n                });\n              } catch (error) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nrouter.put('/actualizar/:codigo',\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$body2, ProVotInicio, ProVotFin, ProVotRegEstInicio, ProVotRegEstFin, ProVotValAspInicio, ProVotValAspFin, ProVotRegPropInicio, ProVotRegPropFin, ProVotFechaJornada, ProVotEstado, ProVotAdmCodigo;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _req$body2 = req.body, ProVotInicio = _req$body2.ProVotInicio, ProVotFin = _req$body2.ProVotFin, ProVotRegEstInicio = _req$body2.ProVotRegEstInicio, ProVotRegEstFin = _req$body2.ProVotRegEstFin, ProVotValAspInicio = _req$body2.ProVotValAspInicio, ProVotValAspFin = _req$body2.ProVotValAspFin, ProVotRegPropInicio = _req$body2.ProVotRegPropInicio, ProVotRegPropFin = _req$body2.ProVotRegPropFin, ProVotFechaJornada = _req$body2.ProVotFechaJornada, ProVotEstado = _req$body2.ProVotEstado, ProVotAdmCodigo = _req$body2.ProVotAdmCodigo;\n            conexion.query('UPDATE tblprocesovotacion SET ProVotInicio=?,ProVotFin=?,ProVotRegEstInicio=?,ProVotRegEstFin=?,ProVotValAspInicio=?,ProVotValAspFin=?,ProVotRegPropInicio=?,ProVotRegPropFin=?,ProVotFechaJornada=?,ProVotEstado=?,ProVotAdmCodigo=?', [ProVotInicio, ProVotFin, ProVotRegEstInicio, ProVotRegEstFin, ProVotValAspInicio, ProVotValAspFin, ProVotRegPropInicio, ProVotRegPropFin, ProVotFechaJornada, ProVotEstado, ProVotAdmCodigo, req.params.codigo], function (err, result) {\n              try {\n                res.json({\n                  message: ' Actualizado satisfactoriamente',\n                  Method: 'PUT',\n                  Status: 'Actualizado'\n                });\n              } catch (err) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nrouter[\"delete\"]('/eliminar/:codigo',\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(req, res) {\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            conexion.query('DELETE FROM tblprocesovotacion WHERE tblprocesovotacion.ProVotCodigo = ?', [req.params.codigo], function (err, result) {\n              try {\n                res.json({\n                  message: 'Eliminado satisfactoriamente',\n                  Method: 'PUT',\n                  Status: 'Eliminado'\n                });\n              } catch (error) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}());\nmodule.exports = router; // exportando las rutas\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2Nlc29Wb3RhY2lvbi5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsImRiY29ubmVjdGlvbiIsImNvbmV4aW9uIiwiZ2V0IiwicmVxIiwicmVzIiwicXVlcnkiLCJlcnIiLCJyZXN1bHQiLCJqc29uIiwic3RhdHVzIiwibWVzc2FnZSIsInBvc3QiLCJib2R5IiwiUHJvVm90SW5pY2lvIiwiUHJvVm90RmluIiwiUHJvVm90UmVnRXN0SW5pY2lvIiwiUHJvVm90UmVnRXN0RmluIiwiUHJvVm90VmFsQXNwSW5pY2lvIiwiUHJvVm90VmFsQXNwRmluIiwiUHJvVm90UmVnUHJvcEluaWNpbyIsIlByb1ZvdFJlZ1Byb3BGaW4iLCJQcm9Wb3RGZWNoYUpvcm5hZGEiLCJQcm9Wb3RFc3RhZG8iLCJQcm9Wb3RBZG1Db2RpZ28iLCJlcnJvciIsInB1dCIsInBhcmFtcyIsImNvZGlnbyIsIk1ldGhvZCIsIlN0YXR1cyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjs7QUFDQSxJQUFNQyxZQUFZLEdBQUdILE9BQU8sQ0FBQyx3QkFBRCxDQUE1QixDLENBQXdEOzs7QUFDeEQsSUFBTUksUUFBUSxHQUFFRCxZQUFZLEVBQTVCO0FBRUFGLE1BQU0sQ0FBQ0ksR0FBUCxDQUFXLFlBQVg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDBCQUF5QixpQkFBZUMsR0FBZixFQUFtQkMsR0FBbkI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUF5QjtBQUM5Q0gsWUFBQUEsUUFBUSxDQUFDSSxLQUFULENBQWUsa0NBQWYsRUFBa0QsVUFBQ0MsR0FBRCxFQUFLQyxNQUFMLEVBQWM7QUFDN0Qsa0JBQUk7QUFDREgsZ0JBQUFBLEdBQUcsQ0FBQ0ksSUFBSixDQUFTRCxN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OztBQUQrQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFuQzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQWVBb0IsTUFBTSxDQUFDQyxPQUFQLEdBQWVqQyxNQUFmLEMsQ0FBdUIiLCJzb3VyY2VSb290IjoiRDpcXFVTVUFSSU9cXERvY3VtZW50c1xcUHJveWVjdG9zXFxFLXZvdGVcXEUtdm90ZS1CYWNrZW5kXFxFLXZvdGUtQmFja2VuZFxcc3JjXFxyb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5jb25zdCBkYmNvbm5lY3Rpb24gPSByZXF1aXJlKCcuLi9tb2RlbHMvZGJjb25uZWN0aW9uJyk7IC8vIGltcG9ydGFuZG8gZWwgbW9kZWxvXHJcbmNvbnN0IGNvbmV4aW9uPSBkYmNvbm5lY3Rpb24oKTtcclxuXHJcbnJvdXRlci5nZXQoJy9jb25zdWx0YXInLCBhc3luYyBmdW5jdGlvbihyZXEscmVzKXsgLy9yZXEgPSB2YSB0ZW5lciBsYSBzb2xpY2l0dWQgIHJlcyA9IHZhIHRlbmVyIGxhIHJlc3B1ZXN0YVxyXG4gICAgY29uZXhpb24ucXVlcnkoJ1NFTEVDVCAqIEZST00gdGJscHJvY2Vzb3ZvdGFjaW9uJywoZXJyLHJlc3VsdCk9PntcclxuICAgICAgIHRyeSB7XHJcbiAgICAgICAgICByZXMuanNvbihyZXN1bHQpO1xyXG4gICAgICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgICBtZXNzYWdlOiAnT2N1cnJpbyB1biBlcnJvcicsXHJcbiAgICAgICAgICAgfSlcclxuICAgICAgIH1cclxuICAgIH0pXHJcbiB9KTtcclxuXHJcbnJvdXRlci5wb3N0KCcvYWdyZWdhcicsIGFzeW5jIGZ1bmN0aW9uKHJlcSwgcmVzKXtcclxuICAgIGNvbnN0IHtQcm9Wb3RJbmljaW8sUHJvVm90RmluLFByb1ZvdFJlZ0VzdEluaWNpbyxQcm9Wb3RSZWdFc3RGaW4sUHJvVm90VmFsQXNwSW5pY2lvLFByb1ZvdFZhbEFzcEZpbixQcm9Wb3RSZWdQcm9wSW5pY2lvLFByb1ZvdFJlZ1Byb3BGaW4sUHJvVm90RmVjaGFKb3JuYWRhLFByb1ZvdEVzdGFkbyxQcm9Wb3RBZG1Db2RpZ299PXJlcS5ib2R5O1xyXG4gICAgICAgY29uZXhpb24ucXVlcnkoJ0lOU0VSVCBJTlRPIHRibHByb2Nlc292b3RhY2lvbihQcm9Wb3RJbmljaW8sUHJvVm90RmluLFByb1ZvdFJlZ0VzdEluaWNpbyxQcm9Wb3RSZWdFc3RGaW4sUHJvVm90VmFsQXNwSW5pY2lvLFByb1ZvdFZhbEFzcEZpbixQcm9Wb3RSZWdQcm9wSW5pY2lvLFByb1ZvdFJlZ1Byb3BGaW4sUHJvVm90RmVjaGFKb3JuYWRhLFByb1ZvdEVzdGFkbyxQcm9Wb3RBZG1Db2RpZ28pIFZBTFVFUyg/LD8sPyw/LD8sPyw/LD8sPyw/LD8pJyxcclxuICAgICAgIFtQcm9Wb3RJbmljaW8sUHJvVm90RmluLFByb1ZvdFJlZ0VzdEluaWNpbyxQcm9Wb3RSZWdFc3RGaW4sUHJvVm90VmFsQXNwSW5pY2lvLFByb1ZvdFZhbEFzcEZpbixQcm9Wb3RSZWdQcm9wSW5pY2lvLFByb1ZvdFJlZ1Byb3BGaW4sUHJvVm90RmVjaGFKb3JuYWRhLFByb1ZvdEVzdGFkbyxQcm9Wb3RBZG1Db2RpZ29dLChlcnIscmVzdWx0KT0+e1xyXG4gICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgIHJlcy5qc29uKHtcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdBZ3JlZ2FkbyBjb3JyZWN0YW1lbnRlJ1xyXG4gICAgICAgICAgICAgfSlcclxuICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnT2N1cnJpbyB1biBlcnJvcidcclxuICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICB9XHJcbiAgICAgICB9KVxyXG4gICAgfSk7XHJcblxyXG5yb3V0ZXIucHV0KCcvYWN0dWFsaXphci86Y29kaWdvJywgYXN5bmMgZnVuY3Rpb24ocmVxLCByZXMpe1xyXG4gICAgY29uc3Qge1Byb1ZvdEluaWNpbyxQcm9Wb3RGaW4sUHJvVm90UmVnRXN0SW5pY2lvLFByb1ZvdFJlZ0VzdEZpbixQcm9Wb3RWYWxBc3BJbmljaW8sUHJvVm90VmFsQXNwRmluLFByb1ZvdFJlZ1Byb3BJbmljaW8sUHJvVm90UmVnUHJvcEZpbixQcm9Wb3RGZWNoYUpvcm5hZGEsUHJvVm90RXN0YWRvLFByb1ZvdEFkbUNvZGlnb309cmVxLmJvZHk7XHJcbiAgICBjb25leGlvbi5xdWVyeSgnVVBEQVRFIHRibHByb2Nlc292b3RhY2lvbiBTRVQgUHJvVm90SW5pY2lvPT8sUHJvVm90RmluPT8sUHJvVm90UmVnRXN0SW5pY2lvPT8sUHJvVm90UmVnRXN0RmluPT8sUHJvVm90VmFsQXNwSW5pY2lvPT8sUHJvVm90VmFsQXNwRmluPT8sUHJvVm90UmVnUHJvcEluaWNpbz0/LFByb1ZvdFJlZ1Byb3BGaW49PyxQcm9Wb3RGZWNoYUpvcm5hZGE9PyxQcm9Wb3RFc3RhZG89PyxQcm9Wb3RBZG1Db2RpZ289PycsXHJcbiAgICBbUHJvVm90SW5pY2lvLFByb1ZvdEZpbixQcm9Wb3RSZWdFc3RJbmljaW8sUHJvVm90UmVnRXN0RmluLFByb1ZvdFZhbEFzcEluaWNpbyxQcm9Wb3RWYWxBc3BGaW4sUHJvVm90UmVnUHJvcEluaWNpbyxQcm9Wb3RSZWdQcm9wRmluLFByb1ZvdEZlY2hhSm9ybmFkYSxQcm9Wb3RFc3RhZG8sUHJvVm90QWRtQ29kaWdvLHJlcS5wYXJhbXMuY29kaWdvXSwoZXJyLHJlc3VsdCk9PntcclxuICAgICAgIHRyeSB7XHJcbiAgICAgICAgICByZXMuanNvbih7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnIEFjdHVhbGl6YWRvIHNhdGlzZmFjdG9yaWFtZW50ZScsXHJcbiAgICAgICAgICAgICAgICBNZXRob2Q6ICdQVVQnLFxyXG4gICAgICAgICAgICAgICAgU3RhdHVzOiAnQWN0dWFsaXphZG8nXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgIG1lc3NhZ2U6ICdPY3VycmlvIHVuIGVycm9yJyxcclxuICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgfSk7XHJcbiAgICAgXHJcbnJvdXRlci5kZWxldGUoJy9lbGltaW5hci86Y29kaWdvJywgYXN5bmMgZnVuY3Rpb24ocmVxLCByZXMpe1xyXG4gICAgY29uZXhpb24ucXVlcnkoJ0RFTEVURSBGUk9NIHRibHByb2Nlc292b3RhY2lvbiBXSEVSRSB0Ymxwcm9jZXNvdm90YWNpb24uUHJvVm90Q29kaWdvID0gPycsW3JlcS5wYXJhbXMuY29kaWdvXSwoZXJyLHJlc3VsdCk9PntcclxuICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIHJlcy5qc29uKHtcclxuICAgICAgICAgICAgIG1lc3NhZ2U6ICdFbGltaW5hZG8gc2F0aXNmYWN0b3JpYW1lbnRlJyxcclxuICAgICAgICAgICAgIE1ldGhvZDogJ1BVVCcsXHJcbiAgICAgICAgICAgICBTdGF0dXM6ICdFbGltaW5hZG8nXHJcbiAgICAgICAgICAgICB9KTtcclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnT2N1cnJpbyB1biBlcnJvcicsXHJcbiAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgICB9KTsgICAgICBcclxubW9kdWxlLmV4cG9ydHM9cm91dGVyOyAvLyBleHBvcnRhbmRvIGxhcyBydXRhcyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "procesoVotacion.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "dbconnection",
        "conexion",
        "get",
        "req",
        "res",
        "query",
        "err",
        "result",
        "json",
        "status",
        "message",
        "post",
        "body",
        "ProVotInicio",
        "ProVotFin",
        "ProVotRegEstInicio",
        "ProVotRegEstFin",
        "ProVotValAspInicio",
        "ProVotValAspFin",
        "ProVotRegPropInicio",
        "ProVotRegPropFin",
        "ProVotFechaJornada",
        "ProVotEstado",
        "ProVotAdmCodigo",
        "error",
        "put",
        "params",
        "codigo",
        "Method",
        "Status",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
      "sourcesContent": [
        "const express = require('express');\r\nconst router = express.Router();\r\nconst dbconnection = require('../models/dbconnection'); // importando el modelo\r\nconst conexion= dbconnection();\r\n\r\nrouter.get('/consultar', async function(req,res){ //req = va tener la solicitud  res = va tener la respuesta\r\n    conexion.query('SELECT * FROM tblprocesovotacion',(err,result)=>{\r\n       try {\r\n          res.json(result);\r\n       } catch (err) {\r\n          res.status(500).json({\r\n             message: 'Ocurrio un error',\r\n           })\r\n       }\r\n    })\r\n });\r\n\r\nrouter.post('/agregar', async function(req, res){\r\n    const {ProVotInicio,ProVotFin,ProVotRegEstInicio,ProVotRegEstFin,ProVotValAspInicio,ProVotValAspFin,ProVotRegPropInicio,ProVotRegPropFin,ProVotFechaJornada,ProVotEstado,ProVotAdmCodigo}=req.body;\r\n       conexion.query('INSERT INTO tblprocesovotacion(ProVotInicio,ProVotFin,ProVotRegEstInicio,ProVotRegEstFin,ProVotValAspInicio,ProVotValAspFin,ProVotRegPropInicio,ProVotRegPropFin,ProVotFechaJornada,ProVotEstado,ProVotAdmCodigo) VALUES(?,?,?,?,?,?,?,?,?,?,?)',\r\n       [ProVotInicio,ProVotFin,ProVotRegEstInicio,ProVotRegEstFin,ProVotValAspInicio,ProVotValAspFin,ProVotRegPropInicio,ProVotRegPropFin,ProVotFechaJornada,ProVotEstado,ProVotAdmCodigo],(err,result)=>{\r\n          try {\r\n             res.json({\r\n                message: 'Agregado correctamente'\r\n             })\r\n          } catch (error) {\r\n             res.status(500).json({\r\n                message: 'Ocurrio un error'\r\n             })\r\n          }\r\n       })\r\n    });\r\n\r\nrouter.put('/actualizar/:codigo', async function(req, res){\r\n    const {ProVotInicio,ProVotFin,ProVotRegEstInicio,ProVotRegEstFin,ProVotValAspInicio,ProVotValAspFin,ProVotRegPropInicio,ProVotRegPropFin,ProVotFechaJornada,ProVotEstado,ProVotAdmCodigo}=req.body;\r\n    conexion.query('UPDATE tblprocesovotacion SET ProVotInicio=?,ProVotFin=?,ProVotRegEstInicio=?,ProVotRegEstFin=?,ProVotValAspInicio=?,ProVotValAspFin=?,ProVotRegPropInicio=?,ProVotRegPropFin=?,ProVotFechaJornada=?,ProVotEstado=?,ProVotAdmCodigo=?',\r\n    [ProVotInicio,ProVotFin,ProVotRegEstInicio,ProVotRegEstFin,ProVotValAspInicio,ProVotValAspFin,ProVotRegPropInicio,ProVotRegPropFin,ProVotFechaJornada,ProVotEstado,ProVotAdmCodigo,req.params.codigo],(err,result)=>{\r\n       try {\r\n          res.json({\r\n                message: ' Actualizado satisfactoriamente',\r\n                Method: 'PUT',\r\n                Status: 'Actualizado'\r\n                });\r\n         } catch (err) {\r\n            res.status(500).json({\r\n             message: 'Ocurrio un error',\r\n             })\r\n           }\r\n        })\r\n     });\r\n     \r\nrouter.delete('/eliminar/:codigo', async function(req, res){\r\n    conexion.query('DELETE FROM tblprocesovotacion WHERE tblprocesovotacion.ProVotCodigo = ?',[req.params.codigo],(err,result)=>{\r\n       try {\r\n            res.json({\r\n             message: 'Eliminado satisfactoriamente',\r\n             Method: 'PUT',\r\n             Status: 'Eliminado'\r\n             });\r\n        } catch (error) {\r\n            res.status(500).json({\r\n                message: 'Ocurrio un error',\r\n              })\r\n           }\r\n        })\r\n     });      \r\nmodule.exports=router; // exportando las rutas"
      ]
    },
    "sourceType": "script",
    "mtime": 1577072374559
  },
  "{\"sourceRoot\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\",\"filename\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\\\\src\\\\routes\\\\propuesta.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\USUARIO\\\\Documents\\\\Proyectos\\\\E-vote\\\\E-vote-Backend\\\\E-vote-Backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "filename": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\propuesta.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\propuesta.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes\\propuesta.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
        "sourceFileName": "propuesta.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar express = require('express');\n\nvar router = express.Router();\n\nvar dbconnection = require('../models/dbconnection'); // importando el modelo\n\n\nvar conexion = dbconnection();\nrouter.get('/consultar',\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //req = va tener la solicitud  res = va tener la respuesta\n            conexion.query('SELECT * FROM tblpropuesta', function (err, result) {\n              try {\n                res.json(result);\n              } catch (err) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nrouter.get('/consultar/:codigo',\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            conexion.query('SELECT * FROM tblpropuesta WHERE tblpropuesta.ProCodigo = ?', [req.params.codigo], function (err, result) {\n              try {\n                res.json(result);\n              } catch (err) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nrouter.post('/agregar',\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$body, ProNombre, ProDescripcion, ProEstado, ProCanCodigo;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _req$body = req.body, ProNombre = _req$body.ProNombre, ProDescripcion = _req$body.ProDescripcion, ProEstado = _req$body.ProEstado, ProCanCodigo = _req$body.ProCanCodigo;\n            conexion.query('INSERT INTO tblpropuesta(ProNombre,ProDescripcion,ProEstado,ProCanCodigo) VALUES(?,?,?,?)', [ProNombre, ProDescripcion, ProEstado, ProCanCodigo], function (err, result) {\n              try {\n                res.json({\n                  message: 'Agregado correctamente'\n                });\n              } catch (error) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nrouter.put('/actualizar/:codigo',\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(req, res) {\n    var _req$body2, ProNombre, ProDescripcion, ProEstado, ProCanCodigo;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _req$body2 = req.body, ProNombre = _req$body2.ProNombre, ProDescripcion = _req$body2.ProDescripcion, ProEstado = _req$body2.ProEstado, ProCanCodigo = _req$body2.ProCanCodigo;\n            conexion.query('UPDATE tblpropuesta SET ProNombre = ?,ProDescripcion = ?,ProEstado = ?,ProCanCodigo = ?', [ProNombre, ProDescripcion, ProEstado, ProCanCodigo, req.params.codigo], function (err, result) {\n              try {\n                res.json({\n                  message: ' Actualizado satisfactoriamente',\n                  Method: 'PUT',\n                  Status: 'Actualizado'\n                });\n              } catch (err) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}());\nrouter[\"delete\"]('/eliminar/:codigo',\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(req, res) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            conexion.query('DELETE FROM tblpropuesta WHERE tblpropuesta.ProCodigo = ?', [req.params.codigo], function (err, result) {\n              try {\n                res.json({\n                  message: 'Eliminado satisfactoriamente',\n                  Method: 'PUT',\n                  Status: 'Eliminado'\n                });\n              } catch (error) {\n                res.status(500).json({\n                  message: 'Ocurrio un error'\n                });\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}());\nmodule.exports = router; // exportando las rutas\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb3B1ZXN0YS5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsImRiY29ubmVjdGlvbiIsImNvbmV4aW9uIiwiZ2V0IiwicmVxIiwicmVzIiwicXVlcnkiLCJlcnIiLCJyZXN1bHQiLCJqc29uIiwic3RhdHVzIiwibWVzc2FnZSIsInBhcmFtcyIsImNvZGlnbyIsInBvc3QiLCJib2R5IiwiUHJvTm9tYnJlIiwiUHJvRGVzY3JpcGNpb24iLCJQcm9Fc3RhZG8iLCJQcm9DYW5Db2RpZ28iLCJlcnJvciIsInB1dCIsIk1ldGhvZCIsIlN0YXR1cyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjs7QUFDQSxJQUFNQyxZQUFZLEdBQUdILE9BQU8sQ0FBQyx3QkFBRCxDQUE1QixDLENBQXdEOzs7QUFDeEQsSUFBTUksUUFBUSxHQUFFRCxZQUFZLEVBQTVCO0FBRUFGLE1BQU0sQ0FBQ0ksR0FBUCxDQUFXLFlBQVg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDBCQUF5QixpQkFBZUMsR0FBZixFQUFtQkMsR0FBbkI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUF5QjtBQUM5Q0gsWUFBQUEsUUFBUSxDQUFDSSxLQUFULENBQWUsNEJBQWYsRUFBNEMsVUFBQ0MsR0FBRCxFQUFLQyxNQUFMLEVBQWM7QUFDdkQsa0JBQUk7QUFDREgsZ0JBQUFBLEdBQUcsQ0FBQ0ksSUFBSixDQUFTRCxNQUFUO0FBQ0YsZUFGRCxDQUVFLE9BQU9ELEdBQVAsRUFBWTtBQUNYRixnQkFBQUEsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkQsSUFBaEIsQ0FBcUI7QUFDbEJFLGtCQUFBQSxPQUFPLEVBQUU7QUFEUyxpQkFBckI7QUFHRjtBQUNILGFBUkQ7O0FBRHFC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LENBQVcsR0FBWCxFQUFnQkQsSUFBaEIsQ0FBcUI7QUFDcEJFLGtCQUFBQSxPQUFPLEVBQUU7QUFEVyxpQkFBckI7QUFHQTtBQUNILGFBYkw7O0FBRjhCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQWxDOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBa0JBWixNQUFNLFVBQU4sQ0FBYyxtQkFBZDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMEJBQW1DLGtCQUFlSyxHQUFmLEVBQW9CQyxHQUFwQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQy9CSCxZQUFBQSxRQUFRLENBQUNJLEtBQVQsQ0FBZSwyREFBZixFQUEyRSxDQUFDRixHQUFHLENBQUNRLE1BQUosQ0FBV0MsTUFBWixDQUEzRSxFQUErRixVQUFDTixHQUFELEVBQUtDLE1BQUwsRUFBYztBQUMxRyxrQkFBSTtBQUNDSCxnQkFBQUEsR0FBRyxDQUFDSSxJQUFKLENBQVM7QUFDUkUsa0JBQUFBLE9BQU8sRUFBRSw4QkFERDtBQUVSVyxrQkFBQUEsTUFBTSxFQUFFLEtBRkE7QUFHUkMsa0JBQUFBLE1BQU0sRUFBRTtBQUhBLGlCQUFUO0FBS0gsZUFORixDQU1HLE9BQU9ILEtBQVAsRUFBYztBQUNaZixnQkFBQUEsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkQsSUFBaEIsQ0FBcUI7QUFDakJFLGtCQUFBQSxPQUFPLEVBQUU7QUFEUSxpQkFBckI7QUFHQTtBQUNILGFBWkw7O0FBRCtCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQW5DOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBZUFhLE1BQU0sQ0FBQ0MsT0FBUCxHQUFlMUIsTUFBZixDLENBQXVCIiwic291cmNlUm9vdCI6IkQ6XFxVU1VBUklPXFxEb2N1bWVudHNcXFByb3llY3Rvc1xcRS12b3RlXFxFLXZvdGUtQmFja2VuZFxcRS12b3RlLUJhY2tlbmRcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcclxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxuY29uc3QgZGJjb25uZWN0aW9uID0gcmVxdWlyZSgnLi4vbW9kZWxzL2RiY29ubmVjdGlvbicpOyAvLyBpbXBvcnRhbmRvIGVsIG1vZGVsb1xyXG5jb25zdCBjb25leGlvbj0gZGJjb25uZWN0aW9uKCk7XHJcblxyXG5yb3V0ZXIuZ2V0KCcvY29uc3VsdGFyJywgYXN5bmMgZnVuY3Rpb24ocmVxLHJlcyl7IC8vcmVxID0gdmEgdGVuZXIgbGEgc29saWNpdHVkICByZXMgPSB2YSB0ZW5lciBsYSByZXNwdWVzdGFcclxuICAgIGNvbmV4aW9uLnF1ZXJ5KCdTRUxFQ1QgKiBGUk9NIHRibHByb3B1ZXN0YScsKGVycixyZXN1bHQpPT57XHJcbiAgICAgICB0cnkge1xyXG4gICAgICAgICAgcmVzLmpzb24ocmVzdWx0KTtcclxuICAgICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICAgICAgICAgbWVzc2FnZTogJ09jdXJyaW8gdW4gZXJyb3InLFxyXG4gICAgICAgICAgIH0pXHJcbiAgICAgICB9XHJcbiAgICB9KVxyXG4gfSk7XHJcblxyXG4gcm91dGVyLmdldCgnL2NvbnN1bHRhci86Y29kaWdvJywgYXN5bmMgZnVuY3Rpb24ocmVxLHJlcyl7XHJcbiAgICBjb25leGlvbi5xdWVyeSgnU0VMRUNUICogRlJPTSB0Ymxwcm9wdWVzdGEgV0hFUkUgdGJscHJvcHVlc3RhLlByb0NvZGlnbyA9ID8nLFtyZXEucGFyYW1zLmNvZGlnb10sKGVycixyZXN1bHQpPT57XHJcbiAgICAgICB0cnkge1xyXG4gICAgICAgICAgcmVzLmpzb24ocmVzdWx0KTtcclxuICAgICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICAgICAgICAgbWVzc2FnZTogJ09jdXJyaW8gdW4gZXJyb3InLFxyXG4gICAgICAgICAgIH0pXHJcbiAgICAgICB9XHJcbiAgICB9KVxyXG4gfSk7XHJcblxyXG5yb3V0ZXIucG9zdCgnL2FncmVnYXInLCBhc3luYyBmdW5jdGlvbihyZXEsIHJlcyl7XHJcbiAgICBjb25zdCB7UHJvTm9tYnJlLFByb0Rlc2NyaXBjaW9uLFByb0VzdGFkbyxQcm9DYW5Db2RpZ299PXJlcS5ib2R5O1xyXG4gICAgICAgY29uZXhpb24ucXVlcnkoJ0lOU0VSVCBJTlRPIHRibHByb3B1ZXN0YShQcm9Ob21icmUsUHJvRGVzY3JpcGNpb24sUHJvRXN0YWRvLFByb0NhbkNvZGlnbykgVkFMVUVTKD8sPyw/LD8pJyxcclxuICAgICAgIFtQcm9Ob21icmUsUHJvRGVzY3JpcGNpb24sUHJvRXN0YWRvLFByb0NhbkNvZGlnb10sKGVycixyZXN1bHQpPT57XHJcbiAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgcmVzLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ0FncmVnYWRvIGNvcnJlY3RhbWVudGUnXHJcbiAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdPY3VycmlvIHVuIGVycm9yJ1xyXG4gICAgICAgICAgICAgfSlcclxuICAgICAgICAgIH1cclxuICAgICAgIH0pXHJcbiAgICB9KTtcclxuICAgIFxyXG5yb3V0ZXIucHV0KCcvYWN0dWFsaXphci86Y29kaWdvJywgYXN5bmMgZnVuY3Rpb24ocmVxLCByZXMpe1xyXG4gICAgY29uc3Qge1Byb05vbWJyZSxQcm9EZXNjcmlwY2lvbixQcm9Fc3RhZG8sUHJvQ2FuQ29kaWdvfT1yZXEuYm9keTtcclxuICAgIGNvbmV4aW9uLnF1ZXJ5KCdVUERBVEUgdGJscHJvcHVlc3RhIFNFVCBQcm9Ob21icmUgPSA/LFByb0Rlc2NyaXBjaW9uID0gPyxQcm9Fc3RhZG8gPSA/LFByb0NhbkNvZGlnbyA9ID8nLFxyXG4gICAgW1Byb05vbWJyZSxQcm9EZXNjcmlwY2lvbixQcm9Fc3RhZG8sUHJvQ2FuQ29kaWdvLHJlcS5wYXJhbXMuY29kaWdvXSwoZXJyLHJlc3VsdCk9PntcclxuICAgICAgIHRyeSB7XHJcbiAgICAgICAgICByZXMuanNvbih7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnIEFjdHVhbGl6YWRvIHNhdGlzZmFjdG9yaWFtZW50ZScsXHJcbiAgICAgICAgICAgICAgICBNZXRob2Q6ICdQVVQnLFxyXG4gICAgICAgICAgICAgICAgU3RhdHVzOiAnQWN0dWFsaXphZG8nXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgIG1lc3NhZ2U6ICdPY3VycmlvIHVuIGVycm9yJyxcclxuICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgfSk7ICBcclxuICAgICBcclxucm91dGVyLmRlbGV0ZSgnL2VsaW1pbmFyLzpjb2RpZ28nLCBhc3luYyBmdW5jdGlvbihyZXEsIHJlcyl7XHJcbiAgICBjb25leGlvbi5xdWVyeSgnREVMRVRFIEZST00gdGJscHJvcHVlc3RhIFdIRVJFIHRibHByb3B1ZXN0YS5Qcm9Db2RpZ28gPSA/JyxbcmVxLnBhcmFtcy5jb2RpZ29dLChlcnIscmVzdWx0KT0+e1xyXG4gICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgcmVzLmpzb24oe1xyXG4gICAgICAgICAgICAgbWVzc2FnZTogJ0VsaW1pbmFkbyBzYXRpc2ZhY3RvcmlhbWVudGUnLFxyXG4gICAgICAgICAgICAgTWV0aG9kOiAnUFVUJyxcclxuICAgICAgICAgICAgIFN0YXR1czogJ0VsaW1pbmFkbydcclxuICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdPY3VycmlvIHVuIGVycm9yJyxcclxuICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgIH0pOyAgICAgIFxyXG5tb2R1bGUuZXhwb3J0cz1yb3V0ZXI7IC8vIGV4cG9ydGFuZG8gbGFzIHJ1dGFzIl19",
    "map": {
      "version": 3,
      "sources": [
        "propuesta.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "dbconnection",
        "conexion",
        "get",
        "req",
        "res",
        "query",
        "err",
        "result",
        "json",
        "status",
        "message",
        "params",
        "codigo",
        "post",
        "body",
        "ProNombre",
        "ProDescripcion",
        "ProEstado",
        "ProCanCodigo",
        "error",
        "put",
        "Method",
        "Status",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\USUARIO\\Documents\\Proyectos\\E-vote\\E-vote-Backend\\E-vote-Backend\\src\\routes",
      "sourcesContent": [
        "const express = require('express');\r\nconst router = express.Router();\r\nconst dbconnection = require('../models/dbconnection'); // importando el modelo\r\nconst conexion= dbconnection();\r\n\r\nrouter.get('/consultar', async function(req,res){ //req = va tener la solicitud  res = va tener la respuesta\r\n    conexion.query('SELECT * FROM tblpropuesta',(err,result)=>{\r\n       try {\r\n          res.json(result);\r\n       } catch (err) {\r\n          res.status(500).json({\r\n             message: 'Ocurrio un error',\r\n           })\r\n       }\r\n    })\r\n });\r\n\r\n router.get('/consultar/:codigo', async function(req,res){\r\n    conexion.query('SELECT * FROM tblpropuesta WHERE tblpropuesta.ProCodigo = ?',[req.params.codigo],(err,result)=>{\r\n       try {\r\n          res.json(result);\r\n       } catch (err) {\r\n          res.status(500).json({\r\n             message: 'Ocurrio un error',\r\n           })\r\n       }\r\n    })\r\n });\r\n\r\nrouter.post('/agregar', async function(req, res){\r\n    const {ProNombre,ProDescripcion,ProEstado,ProCanCodigo}=req.body;\r\n       conexion.query('INSERT INTO tblpropuesta(ProNombre,ProDescripcion,ProEstado,ProCanCodigo) VALUES(?,?,?,?)',\r\n       [ProNombre,ProDescripcion,ProEstado,ProCanCodigo],(err,result)=>{\r\n          try {\r\n             res.json({\r\n                message: 'Agregado correctamente'\r\n             })\r\n          } catch (error) {\r\n             res.status(500).json({\r\n                message: 'Ocurrio un error'\r\n             })\r\n          }\r\n       })\r\n    });\r\n    \r\nrouter.put('/actualizar/:codigo', async function(req, res){\r\n    const {ProNombre,ProDescripcion,ProEstado,ProCanCodigo}=req.body;\r\n    conexion.query('UPDATE tblpropuesta SET ProNombre = ?,ProDescripcion = ?,ProEstado = ?,ProCanCodigo = ?',\r\n    [ProNombre,ProDescripcion,ProEstado,ProCanCodigo,req.params.codigo],(err,result)=>{\r\n       try {\r\n          res.json({\r\n                message: ' Actualizado satisfactoriamente',\r\n                Method: 'PUT',\r\n                Status: 'Actualizado'\r\n                });\r\n         } catch (err) {\r\n            res.status(500).json({\r\n             message: 'Ocurrio un error',\r\n             })\r\n           }\r\n        })\r\n     });  \r\n     \r\nrouter.delete('/eliminar/:codigo', async function(req, res){\r\n    conexion.query('DELETE FROM tblpropuesta WHERE tblpropuesta.ProCodigo = ?',[req.params.codigo],(err,result)=>{\r\n       try {\r\n            res.json({\r\n             message: 'Eliminado satisfactoriamente',\r\n             Method: 'PUT',\r\n             Status: 'Eliminado'\r\n             });\r\n        } catch (error) {\r\n            res.status(500).json({\r\n                message: 'Ocurrio un error',\r\n              })\r\n           }\r\n        })\r\n     });      \r\nmodule.exports=router; // exportando las rutas"
      ]
    },
    "sourceType": "script",
    "mtime": 1577073408813
  }
}